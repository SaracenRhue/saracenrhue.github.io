[ { "title": "Tailscale", "url": "/posts/tailscale/", "categories": "linux, networking, vpn", "tags": "linux, networking, tailscale, vpn, documentation, wireguard", "date": "2024-10-28 00:00:00 +0100", "snippet": "OverviewTailscale is is a VPN based on Wireguard and allows you to connect your devices in a mesh network.Installationcurl -fsSL https://tailscale.com/install.sh | sh" }, { "title": "XRDP on Debian 12", "url": "/posts/xrdp/", "categories": "bash, terminal, shell, linux", "tags": "servers, bash, terminal, linux, documentation, rdp", "date": "2024-10-22 00:00:00 +0200", "snippet": "XRDP is an open-source remote desktop server that uses the Remote Desktop Protocol (RDP). This guide explains how to install XRDP on Debian 12.Prerequisites Debian 12 installed Root or sudo access Terminal accessInstallation StepsQuick all in one commandsudo apt update &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt install xfce4 xfce4-goodies xorg dbus-x11 x11-xserver-utils -y &amp;&amp; sudo apt install xrdp -y &amp;&amp; sudo adduser xrdp ssl-cert &amp;&amp; sudo systemctl restart xrdpManual installation Update and Upgrade System sudo apt update &amp;&amp; sudo apt upgrade -y Install Desktop EnvironmentFor XFCE: sudo apt install xfce4 xfce4-goodies xorg dbus-x11 x11-xserver-utils -y Install XRDP sudo apt install xrdp -y Verify Installation sudo systemctl status xrdp Add XRDP to ssl-cert Group sudo adduser xrdp ssl-cert Restart XRDP Service sudo systemctl restart xrdp Configure Firewall sudo ufw allow 3389/tcpsudo ufw reload Usage On Windows, use “Remote Desktop Connection” Enter the IP address of your Debian machine Provide your Debian username and password when promptedUninstallationTo remove XRDP:sudo apt remove xrdp -y" }, { "title": "Perl", "url": "/posts/perl/", "categories": "perl, documentation", "tags": "perl, documentation", "date": "2024-10-22 00:00:00 +0200", "snippet": "VariablesScalar Variables$var = \"value\"; # Public variablemy $var = \"value\"; # Private variablelocal $var = \"value\"; # Localized variable# Constantsuse constant PI =&gt; 3.14;Array Variables@arr = (1, 2, 3); # Array declarationHash Variables%hash = (key1 =&gt; \"value1\", key2 =&gt; \"value2\");ArraysArray Operations# Adding elementspush(@arr, 4); # Add to endunshift(@arr, 0); # Add to beginning# Removing elementspop(@arr); # Remove from endshift(@arr); # Remove from beginningsplice(@arr, 1, 1); # Remove element at index 1# Accessing elements$first = $arr[0]; # Get first element@slice = @arr[0, 1, 2];# Get multiple elements# Modifying elements$arr[0] = 10; # Set single element@arr[0, 1, 2] = (1, 2, 3); # Set multiple elements# Array information$len = scalar @arr; # Get array length$last_index = $#arr; # Get last indexArray Functions@sorted = sort @arr; # Sort ascending@reverse_sorted = reverse sort @arr; # Sort descending@unique = uniq @arr; # Remove duplicates (requires List::MoreUtils)HashesHash Operations# Adding/modifying elements$hash{new_key} = \"new_value\";# Accessing elements$value = $hash{key};# Removing elementsdelete $hash{key};# Check if key existsif (exists $hash{key}) { ... }# Get keys and values@keys = keys %hash;@values = values %hash;Control Structures# If-elseif ($condition) { # code} elsif ($another_condition) { # code} else { # code}# Loopsfor my $i (0..10) { ... } # C-style for loopforeach my $item (@array) { ... } # Iterate over arraywhile ($condition) { ... } # While loopdo { ... } while ($condition); # Do-while loopSubroutinessub function_name { my ($param1, $param2) = @_; # function body return $result;}# Calling a functionmy $result = function_name($arg1, $arg2);File Operations# Reading a fileopen(my $fh, '&lt;', 'filename.txt') or die \"Cannot open file: $!\";while (my $line = &lt;$fh&gt;) { chomp $line; # Process $line}close $fh;# Writing to a fileopen(my $fh, '&gt;', 'output.txt') or die \"Cannot open file: $!\";print $fh \"Content to write\\n\";close $fh;Regular Expressionsif ($string =~ /pattern/) { ... } # Match$string =~ s/old/new/g; # SubstitutionModulesuse Module::Name; # Import moduleuse Module::Name qw(func1 func2); # Import specific functions" }, { "title": "Proxmox", "url": "/posts/proxmox/", "categories": "Linux, VMs", "tags": "Servers, Bash, Terminal, Linux, Documentation, VMs, Proxmox", "date": "2024-09-14 00:00:00 +0200", "snippet": "Disable Enterprise Repository and Add the No-Subscription Repository: Disable the Proxmox Enterprise RepositoryEdit the Proxmox enterprise repository configuration file to disable it:nano /etc/apt/sources.list.d/pve-enterprise.listComment out the line in this file by adding a # at the beginning:# deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterpriseSave and exit the file (Ctrl+O, Enter, Ctrl+X). Add the No-Subscription Proxmox RepositoryNow, add the Proxmox community repository (no subscription) by creating a new file:echo \"deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription\" &gt; /etc/apt/sources.list.d/pve-no-subscription.list Update the Package ListAfter disabling the enterprise repository and adding the no-subscription repository, update your package list:apt update Continue with the Tailscale InstallationNow you can proceed with the remaining commands to install Tailscale, as the package list should update without the 401 Unauthorized error:Installing TailscaleAfter setting up the non enterprise repo you can run:apt update &amp;&amp; apt install -y curl &amp;&amp; curl -fsSL https://tailscale.com/install.sh | shTailscale in LXC ContainersWhat is an LXC? A lightweight virtualized Linux system Unprivileged LXC: root user (uid 0) in container maps to unprivileged host user for securityTailscale in LXCTailscale needs /dev/tun access which unprivileged containers don’t usually have. To enable it: Add these lines to /etc/pve/lxc/[container-id].conf:lxc.cgroup2.devices.allow: c 10:200 rwmlxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file Restart the container Install Tailscale in the container apt update &amp;&amp; apt install -y curl &amp;&amp; curl -fsSL https://tailscale.com/install.sh | shAdding ISO Files for VM creationBy default all ISO files are stored in /var/lib/vz/template/iso/ so just download them into it with:wget -P /var/lib/vz/template/iso/ &lt;URL_TO_ISO&gt;Managing LXC TemplatesThe pveam command in Proxmox is used for managing appliance images and templates. It stands for “Proxmox VE Appliance Manager.” Here are some key uses of the pveam command:List available templatespveam listUpdate the list of available templatespveam updateDownload a templatepveam download local &lt;template-name&gt;Show details about available templatespveam availableRemove a downloaded templatepveam remove &lt;template-file&gt;Search for specific templatespveam search &lt;search-term&gt;Show information about a specific templatepveam info &lt;template-name&gt;These functions allow you to manage the LXC templates available on your Proxmox server, making it easier to create and deploy containers.Pass through a physical disk to a VMTo pass through a physical disk in Proxmox to a VM, you can follow these detailed steps: Identify the Disk: Run lsblk -o +MODEL,SERIAL,WWN in the terminal to list all hard disks along with their model names and serial numbers. Identify the disk you want to pass through by noting its details. Find the Disk ID: Use ls -l /dev/disk/by-id to locate the disk by its unique ID, which remains constant even if other system changes occur. lsblk -o +MODEL,SERIAL,WWN &amp;&amp; ls -l /dev/disk/by-id Pass the Disk to the VM: Execute the following command, replacing [VM_ID] with your virtual machine’s ID and [FULL_ID_OF_DISK] with the full ID of the disk from step 2: qm set [VM_ID] -scsi1 /dev/disk/by-id/[FULL_ID_OF_DISK] This command adds the disk to the VM. If you’re already using a SCSI disk, make sure to use a unique SCSI number (e.g., -scsi1, -scsi2, etc.). " }, { "title": "Ollama", "url": "/posts/ollama/", "categories": "llm, linux", "tags": "llm, linux, ollama, huggingface", "date": "2024-06-16 00:00:00 +0200", "snippet": "Installing OllamaMacOS:brew install ollamaLinux:curl -fsSL https://ollama.com/install.sh | shInstall official modelsollama pull &lt;modelname&gt;Official modelsThen use run use the modelInstalling custom huggingface models in ollamaFirst find a .gguf model file and download it.Then create a modelfile (the filename does not matter)FROM /path/to/model.ggufTEMPLATE \"\"\"&lt;|im_start|&gt;system&lt;|im_end|&gt;&lt;|im_start|&gt;user&lt;|im_end|&gt;&lt;|im_start|&gt;assistant\"\"\"SYSTEM \"\"\"\"\"\"PARAMETER stop \"&lt;|im_start|&gt;\"PARAMETER stop \"&lt;|im_end|&gt;\"Then run the following command to install the model:ollama create PreferedModelName -f /path/to/modelfile" }, { "title": "Kubernetes Cluster on Raspberry Pi", "url": "/posts/kubernetes/", "categories": "linux, docker, containers", "tags": "linux, documentation, arm64, amd64, cluster, pi", "date": "2024-06-10 00:00:00 +0200", "snippet": "PreperationPrep all the Raspberry Pis with the lite non desktop 64bit version of Raspberry Pi OS.Be shure to set a unique hostname for each Raspberry Pi.Install k3sssh into the first node which will become the master and switch to root:sudo su -Update and install tailscaleapt update &amp;&amp; apt upgrade -y &amp;&amp; curl -fsSL https://tailscale.com/install.sh | sh &amp;&amp; tailscale up --sshModify the cmdline.txt file and reboot:sed -i '1s/^/cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory /' /boot/firmware/cmdline.txtrebootAfter logging back in, install k3s and verify the installation:curl -sfL https://get.k3s.io | sh -kubectl get nodesJoin the other nodesRepeat the install process for each node and extract the token from your master node.cat /var/lib/rancher/k3s/server/node-tokenssh into the other nodes and join the cluster using the token and hostname from the master node:curl -sfL https://get.k3s.io | K3S_URL=https://hostname:6443 K3S_TOKEN=token_from_earlier sh -Install PortainerIf you want to install portainer on your cluster, run the following commands on your master node:kubectl apply -n portainer -f https://raw.githubusercontent.com/portainer/k8s/master/deploy/manifests/portainer/portainer.yamlPortainer is avalible at http://master:30777If you want to controll the cluster from a existing Portainer instance install Portainer Agent:kubectl apply -f https://downloads.portainer.io/ce2-19/portainer-agent-k8s-lb.yamlNow you can add the cluster to your existing Portainer instance.source" }, { "title": "InfluxQL + Grafana", "url": "/posts/influxql/", "categories": "linux, database, db, grafana", "tags": "servers, linux, database, db, documentation, fluxdb, grafana", "date": "2024-03-04 00:00:00 +0100", "snippet": "Understanding the BasicsSelecting Data Basic Query: SELECT \"field_key\" FROM \"measurement_name\" With Time Filter: SELECT \"field_key\" FROM \"measurement_name\" WHERE $timeFilterFiltering Specific Time Range: WHERE time &gt;= '2023-01-01T00:00:00Z' AND time &lt;= '2023-01-02T00:00:00Z' Relative Time: WHERE time &gt; now() - 1h Tags: WHERE \"tag_key\" = 'tag_value' Fields: WHERE \"field_key\" &gt; 100Grouping Data Time Intervals: GROUP BY time(10m) Tags: GROUP BY \"tag_key\" Time and Tags: GROUP BY time(10m), \"tag_key\"Aggregations and CalculationsCommon Aggregations Count: SELECT COUNT(\"field_key\") FROM \"measurement_name\" Sum: SELECT SUM(\"field_key\") FROM \"measurement_name\" Mean: SELECT MEAN(\"field_key\") FROM \"measurement_name\" Min/Max: SELECT MIN(\"field_key\"), MAX(\"field_key\") FROM \"measurement_name\"Selectors (Return a single point) First/Last: SELECT FIRST(\"field_key\"), LAST(\"field_key\") FROM \"measurement_name\" Top/Bottom: SELECT TOP(\"field_key\", 5), BOTTOM(\"field_key\", 5) FROM \"measurement_name\"Transformations Difference: SELECT DIFFERENCE(FIRST(\"field_key\")) FROM \"measurement_name\" Moving Average: SELECT MOVING_AVERAGE(\"field_key\", 5) FROM \"measurement_name\" Cumulative Sum: SELECT CUMULATIVE_SUM(\"field_key\") FROM \"measurement_name\"Advanced TechniquesJoining Data (Merge) SELECT * FROM \"measurement_one\" INNER JOIN \"measurement_two\" ON \"measurement_one\".\"tag_key\" = \"measurement_two\".\"tag_key\"Subqueries SELECT MEAN(\"usage\") FROM (SELECT SUM(\"field_key\") AS \"usage\" FROM \"measurement_name\" GROUP BY time(1h))Data Exploration Show Databases: SHOW DATABASES Show Measurements: SHOW MEASUREMENTS Show Field Keys: SHOW FIELD KEYS FROM \"measurement_name\" Show Tag Keys: SHOW TAG KEYS FROM \"measurement_name\"Grafana-Specific Tips Using $timeFilter: Grafana replaces $timeFilter with the dashboard’s current time range, ensuring queries are automatically scoped to the visible window. Template Variables: Use Grafana template variables to create dynamic dashboards. You can incorporate variables in your InfluxQL queries like so: WHERE \"tag_key\" = '$variable_name'. Annotations: Use InfluxQL to create annotations in Grafana by selecting the time and text columns, e.g., SELECT time, \"event_text\" FROM \"annotations\" WHERE $timeFilter. Debugging Queries: Utilize Grafana’s Query Inspector feature to debug and optimize your InfluxQL queries. This can be especially helpful for understanding how Grafana applies $timeFilter and other variables to your queries." }, { "title": "Rust", "url": "/posts/rust/", "categories": "rust, documentation", "tags": "rust, documentation", "date": "2024-03-01 00:00:00 +0100", "snippet": "fn main() { println!(\"Hello, World!\");}Cargo Package ManagerCargo is the Rust package manager. It is used to compile, test, and run Rust projects. Cargo is also used to manage dependencies.InstallationCargo is included with the Rust installation. To check if Cargo is installed, run:cargo --versionCreate a New ProjectTo create a new Rust project, run:cargo new hello_worldThis will create a new directory called hello_world with the following structure:hello_world├── Cargo.toml├── src│ └── main.rsAdd Package DependenciesTo add a package dependency, open the Cargo.toml file in the project directory and add the following line:[dependencies]rand = \"0.8.4\"This will add the rand package as a dependency to the project.Build and RunTo build and run the project, navigate to the project directory and run:cargo runVariablesRust variables are immutable by default. To make a variable mutable, add the mut keyword before the variable name.let mut x = 5;Data TypesRust is a statically typed language, which means that the data type of a variable is known at compile time. However, the compiler can usually infer the data type based on the value and how it is used.Scalar Types Type Size Description i8 1 byte Signed 8-bit integer i16 2 bytes Signed 16-bit integer i32 4 bytes Signed 32-bit integer i64 8 bytes Signed 64-bit integer u8 1 byte Unsigned 8-bit integer u16 2 bytes Unsigned 16-bit integer u32 4 bytes Unsigned 32-bit integer u64 8 bytes Unsigned 64-bit integer isize size of pointer Signed integer of the size of a pointer usize size of pointer Unsigned integer of the size of a pointer f32 4 bytes 32-bit floating point number f64 8 bytes 64-bit floating point number char 4 bytes Unicode scalar value bool 1 byte Boolean value Arrayslet a = [1, 2, 3, 4, 5];a[0] = 6;a.push(7);a.pop();a.remove(2);Hash Maps (Dictionaries)let mut scores = HashMap::new();scores.insert(\"Blue\", 10);scores.remove(\"Blue\");IORead InputTo read input from the user, use the std::io module.use std::io;fn main() { let mut input = String::new(); io::stdin().read_line(&amp;mut input).expect(\"Failed to read line\"); println!(\"You entered: {input}\");}Print OutputTo print output to the console, use the println! macro.println!(\"Hello, World!\"); Control Flowif else Statementif number % 2 == 0 { println!(\"The number is even\");} else { println!(\"The number is odd\");}match Statementmatch number { 1 =&gt; println!(\"One\"), 2 =&gt; println!(\"Two\"), 3 =&gt; println!(\"Three\"), _ =&gt; println!(\"Other\"),}while Statementlet mut number = 3;while number != 0 { println!(\"{number}\"); number -= 1;}loop Statementloop { println!(\"Loop forever!\");}Functionsfn another_function(x: bool) { println!(\"The value of x is: {x}\");}Return Valuesfn five() -&gt; i32 { 5 //as i32 (optional casting)}Expressionslet y = { let x = 3; x + 1};println!(\"The value of y is: {y}\");" }, { "title": "Pi as Router", "url": "/posts/pirouter/", "categories": "terminal, shell, linux, documentation, pi, raspberry", "tags": "servers, bash, terminal, linux, documentation, pi, raspberry", "date": "2024-02-26 00:00:00 +0100", "snippet": "Prepare the Pisudo apt-get updatesudo apt-get full-upgradesudo rebootSet the WiFi country in raspi-config’s Localisation Options:sudo raspi-configInstall CasaOScurl -sL https://install.casaos.io | bashChange the WebUI port!Install RaspAPcurl -sL https://install.raspap.com | bashChange the WebUI port!" }, { "title": "Vim", "url": "/posts/vim/", "categories": "terminal, shell, editors", "tags": "servers, bash, terminal, linux, documentation", "date": "2024-01-25 00:00:00 +0100", "snippet": "IntroductionVim is a highly configurable text editor built to enable efficient text editing. It’s an improved version of the vi editor distributed with most UNIX systems.Install Vim using Homebrew:brew install vimBasic CommandsOpening and Exiting Open Vim: vim #or vi Open a file: vim filename Exit Vim: :q (if no changes were made) :q! (to exit without saving changes) :wq (to save changes and exit) ZZ (to save and quit) Navigation Move cursor: h (left), j (down), k (up), l (right) Go to start of the file: gg Go to end of the file: G Go to line number (e.g., line 5): :5 Editing Insert mode: i (before cursor), I (start of line), a (after cursor), A (end of line) Delete character: x (under cursor), X (before cursor) Delete entire line: dd Undo and redo: u (undo), Ctrl-r (redo) Copy (yank) and paste: yy (copy line), p (paste after cursor), P (paste before cursor) Search and Replace Search for a pattern: /pattern (then n for next, N for previous) Replace: :%s/old/new/g (replace all occurrences of ‘old’ with ‘new’) :%s/old/new/gc (with confirmation) Visual Mode Enter visual mode: v (character mode), V (line mode), Ctrl-v (block mode) Commands in visual mode (like copy, delete) are applied to the selected text.Windows and Tabs Split window: :split (horizontal), :vsplit (vertical) Navigate windows: Ctrl-w followed by navigation keys (h, j, k, l) Open new tab: :tabnew Navigate tabs: gt (next tab), gT (previous tab) Advanced Features Command mode for complex commands Customization through .vimrc Extensive plugin system Integration with many tools" }, { "title": "Tmux", "url": "/posts/tmux/", "categories": "terminal, shell", "tags": "servers, bash, terminal, linux, documentation", "date": "2024-01-25 00:00:00 +0100", "snippet": "IntroductionTmux is a terminal multiplexer that allows you to manage multiple terminal sessions from a single window. It’s extremely useful for developers and system administrators for multitasking in the command line environment.Install Tmux using Homebrew:brew install tmuxTmux Shortcuts and CommandsStarting, Detaching, and Attaching Sessions Start new session: tmux Start new named session: tmux new -s session_name Detach from session: Ctrl-b then d List sessions: tmux ls Attach to session: tmux attach -t session_name Attach to the last session: tmux a Window Management Create new window: Ctrl-b then c Switch to window by number (e.g., window 1): Ctrl-b then 1 Rename current window: Ctrl-b then , Close current window: Ctrl-d or exit the shell Pane Management Split pane horizontally: Ctrl-b then % Split pane vertically: Ctrl-b then \" Navigate between panes: Ctrl-b then use arrow keys Resize panes: Ctrl-b then hold Ctrl and use arrow keys Close current pane: Ctrl-d or exit the shell in the pane Session Environment Reload tmux configuration: tmux source-file ~/.tmux.conf Show all key bindings: tmux list-keys Show system information: Ctrl-b then i Miscellaneous Enter command mode: Ctrl-b then : Capture pane content to a file: tmux capture-pane -t 0 -S - -E - -p &gt; file.txt Scroll mode (copy mode): Ctrl-b then [, then navigate using arrow keys, q to exit Customizing Tmux Tmux is highly customizable through the .tmux.conf file in the user’s home directory. You can set key bindings, appearance, and behavior according to your preference." }, { "title": "SSH", "url": "/posts/ssh/", "categories": "SSH, Terminal, Shell", "tags": "Servers, SSH, Terminal, Linux, Documentation, Automation, Shell", "date": "2024-01-25 00:00:00 +0100", "snippet": "Introduction to SSHSSH (Secure Shell) is a network protocol used to securely connect to a remote server or computer over an unsecured network. SSH provides secure channel over an unsecured network by using a client-server architecture, encrypting the data transmitted.Basic SSH CommandsConnect to a ServerTo connect to a server using SSH:ssh username@server_ipConnect to a Server on a Specific PortIf the server is listening on a non-default port (default is 22):ssh -p port_number username@server_ipExecute a Command on a ServerTo run a command (e.g., ls) on the server without entering into interactive mode:ssh username@server_ip \"command\"Copy a File to a Server (SCP)To securely copy a file from your local machine to a remote server:scp local_file.txt username@server_ip:/remote/directory/Copy a File from a Server (SCP)To copy a file from the remote server to your local machine:scp username@server_ip:/remote/file.txt /local/directorySSH KeysGenerating SSH KeysGenerate a new SSH key pair (public and private) using:ssh-keygen -t rsa -b 4096This command generates a new SSH key, using the provided email as a label. -t specifies the type of key to create (here RSA), and -b specifies the number of bits in the key (more bits means more secure).Copying Public Key to ServerAfter generating your SSH keys, copy your public key to the remote server for password-less login:ssh-copy-id -i ~/.ssh/mykey.pub username@server_ipReplace mykey.pub with your public key file if you’re not using the default name or path.Permissions for SSH KeysEnsure correct permissions for your SSH keys:chmod 700 ~/.sshchmod 600 ~/.ssh/id_rsachmod 644 ~/.ssh/id_rsa.pubThis sets the directory permissions to 700, private key to 600, and public key to 644.Advanced SSH UsageSSH Config FileYou can create an SSH config file for easier management of multiple SSH connections: Create a config file in your SSH directory: touch ~/.ssh/config Edit the file to add your SSH hosts. For example: Host myserver HostName server_ip User username Port port_number IdentityFile ~/.ssh/mykey SSH Tunneling (Port Forwarding)SSH tunneling allows you to forward a port on your local machine to a port on the remote server: Local Port Forwarding: ssh -L local_port:localhost:remote_port username@server_ip This forwards a local port to a remote port via the SSH server. Remote Port Forwarding: ssh -R remote_port:localhost:local_port username@server_ip This forwards a remote port to a local port via the SSH server. SSH Agent ForwardingSSH agent forwarding allows you to use your local SSH keys on a remote server: Start the SSH agent in the background: eval \"$(ssh-agent -s)\" Add your SSH private key to the SSH agent: ssh-add ~/.ssh/id_rsa Connect with agent forwarding enabled: ssh -A username@server_ip Using SSH with GitFor Git operations over SSH, configure Git to use SSH keys: Set your Git SSH command: git config --global core.sshCommand 'ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes' Clone a repository using SSH: git clone ssh://git@server_ip:port/repository.git " }, { "title": "SQLite", "url": "/posts/sqlite/", "categories": "linux, database, db", "tags": "servers, linux, database, db, documentation, sqlite", "date": "2024-01-25 00:00:00 +0100", "snippet": "SQLite is a C library that provides a lightweight, disk-based database. It doesn’t require a separate server process and allows access to the database using a nonstandard variant of the SQL query language. SQLite is a popular choice for local/client storage in application software such as web browsers and mobile apps.Key characteristics of SQLite: Serverless: SQLite doesn’t require a separate server process or system. Zero Configuration: No setup or administration needed. Cross-Platform: Accessible on various systems and languages. Self-Contained: A single ordinary disk file holds the complete database.SQLite is often used for: Local data storage for mobile apps. Stand-in for a traditional database during prototyping and development. Internal or temporary databases. Small to medium-sized websites.SQLite with PythonInstallationPython’s standard library includes SQLite3, which means you don’t need to install anything additional to start using SQLite.Basic Usageimport sqlite3# Connect to SQLite Databaseconn = sqlite3.connect('example.db')# Create a Cursor Objectc = conn.cursor()# Create Tablec.execute('''CREATE TABLE IF NOT EXISTS stocks (date text, trans text, symbol text, qty real, price real)''')# Insert a Row of Datac.execute(\"INSERT INTO stocks VALUES ('2024-01-23','BUY','RHAT',100,35.14)\")# Save (commit) the changesconn.commit()# Query Datafor row in c.execute('SELECT * FROM stocks ORDER BY price'): print(row)# Close the Connectionconn.close()SQLite with Node.jsInstallationNode.js doesn’t include SQLite in its standard library, so you need to install it using npm.npm install sqlite3Basic Usageconst sqlite3 = require('sqlite3').verbose();// Connect to SQLite Databaselet db = new sqlite3.Database('./example.db', (err) =&gt; { if (err) { console.error(err.message); } console.log('Connected to the SQLite database.');});// Create Tabledb.run('CREATE TABLE IF NOT EXISTS stocks (date text, trans text, symbol text, qty real, price real)');// Insert a Row of Datadb.run(\"INSERT INTO stocks VALUES ('2024-01-23','BUY','RHAT',100,35.14)\");// Query Datadb.all(\"SELECT * FROM stocks\", [], (err, rows) =&gt; { if (err) { throw err; } rows.forEach((row) =&gt; { console.log(row); });});// Close the Databasedb.close((err) =&gt; { if (err) { console.error(err.message); } console.log('Close the database connection.');});SQLite is an excellent choice for applications needing the flexibility of a relational database without the overhead of a full-scale database management system. It’s widely appreciated for its simplicity, reliability, and ease of integration." }, { "title": "Rsync", "url": "/posts/rsync/", "categories": "Rsync, Terminal, Shell", "tags": "File Transfer, Rsync, Terminal, Linux, Documentation, Automation, Shell", "date": "2024-01-25 00:00:00 +0100", "snippet": "Introduction to RsyncRsync (Remote Sync) is a widely used command-line tool for efficiently transferring and synchronizing files across computer systems, with support for incremental file transfer. It’s commonly used for backups, mirroring, and as an improved copy command for everyday use.Basic Rsync UsageBasic File TransferTransfer files from local system to a remote system:rsync local_file username@server_ip:/remote/directory/Transfer files from a remote system to the local system:rsync username@server_ip:/remote/file /local/directoryDirectory TransferTo transfer a directory and its contents:rsync -r /local/directory username@server_ip:/remote/directorySynchronizing DirectoriesTo synchronize the contents of a directory:rsync -a /local/directory/ username@server_ip:/remote/directoryIncremental File TransferRsync transfers only the changed parts of files:rsync -av /local/directory/ username@server_ip:/remote/directoryAdvanced Rsync FeaturesUsing SSH for TransferTo use SSH for secure file transfer:rsync -avz -e ssh /local/directory/ username@server_ip:/remote/directoryExclude FilesExcluding files from transfer:rsync -av --exclude 'pattern_to_exclude' /source/ /destination/Delete OptionTo delete extraneous files from the destination directory:rsync -av --delete /local/directory/ username@server_ip:/remote/directoryDry RunPerform a trial run with no changes made:rsync -av --dry-run /source/ /destination/Bandwidth LimitLimit the bandwidth used by Rsync:rsync -avz --bwlimit=1000 /source/ /destination/Synchronization of File Permissions and OwnershipTo maintain file permissions and ownership:rsync -avz --perms --owner --group /source/ /destination/Rsync Daemon for Frequent TransfersSetting Up Rsync DaemonFor frequent transfers, set up an Rsync daemon on the remote server. Configure the Rsync daemon settings in rsyncd.conf file. Run Rsync in daemon mode: rsync --daemon Using Rsync Daemon for TransferTo transfer files using the Rsync daemon:rsync /local/directory/ rsync://username@server_ip/module_name/destinationRsync in Backup SolutionsIncremental BackupsRsync can be used for incremental backups, transferring only changed files:rsync -a --link-dest=/path/to/previous/backup /source/ /current/backup/" }, { "title": "MediaWiki Markup", "url": "/posts/mediawiki/", "categories": "readme", "tags": "documentation", "date": "2024-01-25 00:00:00 +0100", "snippet": "Introduction to MediaWiki MarkupMediaWiki is a free and open-source wiki software, best known for powering Wikipedia. It uses its own markup language to allow for easy editing of pages.Basic MediaWiki SyntaxHeadings and SubheadingsHeadings and subheadings are created using equal signs (=). The number of equal signs used denotes the level of the heading.= Heading 1 === Heading 2 ===== Heading 3 ======= Heading 4 ========= Heading 5 =========== Heading 6 ======Text FormattingBold and ItalicText can be emphasized in different ways:''italic'''''bold''''''''bold and italic'''''ListsUnordered ListsUnordered lists are created using asterisks (*).* Item 1* Item 2** Subitem 2a** Subitem 2bOrdered ListsOrdered lists are created using number signs (#).# First item# Second item## Subitem 2a## Subitem 2bLinksInternal LinksInternal links to other pages within the same wiki:[[Page title]][[Page title|Display text]]External LinksExternal links to websites:[https://www.example.com][https://www.example.com Display text]Images and MediaTo add images and other media files:[[File:Example.jpg]][[File:Example.jpg|thumb|Caption text]]Formatting CodeInline CodeFor inline code, use &lt;code&gt;&lt;/code&gt; tags.&lt;code&gt;inline code&lt;/code&gt;Code BlocksFor code blocks, use &lt;pre&gt;&lt;/pre&gt; tags.&lt;pre&gt;Line 1 of codeLine 2 of code&lt;/pre&gt;BlockquotesBlockquotes are created using a colon (:) at the start of a line.: This is a blockquote.:: Nested blockquote.TablesTables are created with curly braces and pipes.{| class=\"wikitable\"|-! Header 1 !! Header 2 !! Header 3|-| Row 1, Cell 1 || Row 1, Cell 2 || Row 1, Cell 3|-| Row 2, Cell 1 || Row 2, Cell 2 || Row 2, Cell 3|}Horizontal RulesHorizontal rules are created using four dashes (----).----Advanced MediaWiki FeaturesTemplatesTemplates are reusable wiki elements:CategoriesAdd a page to a category:[[Category:Category name]]RedirectsTo redirect a page to another:#REDIRECT [[Page title]]Magic WordsMagic words are a series of keywords used to perform specific functions:__TOC____NOTOC____NOEDITSECTION__TransclusionIncluding the content of one page into another:VariablesMediaWiki provides various variables for dynamic content: " }, { "title": "Markdown", "url": "/posts/markdown/", "categories": "readme", "tags": "documentation", "date": "2024-01-25 00:00:00 +0100", "snippet": "Introduction to MarkdownMarkdown is a lightweight markup language with plain-text formatting syntax. Its design allows it to be converted to many output formats, but it’s most commonly used to generate HTML. Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.Basics of Markdown SyntaxHeadingsHeadings are created by adding one or more # symbols before your heading text. The number of # you use will determine the size of the heading.# Heading 1## Heading 2### Heading 3#### Heading 4##### Heading 5###### Heading 6EmphasisYou can emphasize text using either * or _.*italic* or _italic_**bold** or __bold__***bold and italic*** or ___bold and italic___ListsUnordered ListsUnordered lists are created using *, +, or -.* Item 1* Item 2 * Subitem 2a * Subitem 2bOrdered ListsOrdered lists are created with numbers.1. First Item2. Second Item3. Third ItemLinksLinks are created using the following syntax: [link text](URL)[Google](https://www.google.com)ImagesImages are similar to links, but they include a preceding exclamation mark.![alt text](image.jpg)CodeFor inline code, wrap the text in backticks. For code blocks, use triple backticks or indent with four spaces.`inline code`code blocks:```pythonprint('Hello, world!')```/without the /BlockquotesBlockquotes are created using &gt;.&gt; This is a blockquote.Horizontal RulesHorizontal rules are created using three or more -, *, or _.---* * *___Advanced Markdown ElementsTablesTables are created using - for dividing lines and | for columns.| Header 1 | Header 2 | Header 3 || -------- | -------- | -------- || Row 1 | Data | Data || Row 2 | Data | Data |Fenced Code BlocksFenced code blocks are surrounded by triple backticks and can include a language identifier for syntax highlighting.```pythonprint(\"Hello, world!\")### Task ListsTask lists are lists with checkboxes. They're created by including brackets with a space or an `x`.```markdown- [x] Completed task- [ ] Incomplete taskFootnotesFootnotes are created by including a caret (^) followed by a bracketed identifier.Here's a sentence with a footnote. [^1][^1]: This is the footnote.StrikethroughStrikethrough text is created using double tildes.~~This text is crossed out.~~EmojisEmojis can be added using emoji codes.:smile: :heart: :+1:" }, { "title": "PI Router", "url": "/posts/pirouter/", "categories": "linux, pi, router, networking", "tags": "servers, bash, terminal, linux, documentation, pi, router, networking", "date": "2024-01-24 00:00:00 +0100", "snippet": "Prerequisites Raspberry Pi with Raspbian OS. Basic command line knowledge.Step 1: Update Raspberry Pisudo apt updatesudo apt upgradeStep 2: Install dnsmasq and hostapdsudo apt install dnsmasq hostapdStep 3: Configure Network Interfaces (/etc/dhcpcd.conf)interface wlan0static ip_address=192.168.0.1/24nohook wpa_supplicant interface wlan0: Specifies the WLAN interface. static ip_address=192.168.0.1/24: Sets a static IP for WLAN. nohook wpa_supplicant: Prevents the default WiFi configuration script from running.Step 4: Configure DHCP and DNS (dnsmasq) (/etc/dnsmasq.conf) Backup original config: sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig Edit new config: sudo vi /etc/dnsmasq.conf interface=wlan0dhcp-range=192.168.0.100,192.168.0.200,255.255.255.0,24h interface=wlan0: Binds dnsmasq to the WLAN interface. dhcp-range: Sets DHCP IP range and lease time.Step 5: Configure Access Point (hostapd) (/etc/hostapd/hostapd.conf)interface=wlan0driver=nl80211ssid=YourNetworkSSIDhw_mode=gchannel=7wpa=2wpa_passphrase=YourPasswordwpa_key_mgmt=WPA-PSKwpa_pairwise=TKIPrsn_pairwise=CCMP interface=wlan0: WLAN interface. driver=nl80211: Software driver to use. ssid=YourNetworkSSID: Network name. hw_mode=g: Wireless protocol (a/b/g/n/ac). channel=7: WiFi channel. wpa=2: WPA version. wpa_passphrase=YourPassword: Network password. wpa_key_mgmt=WPA-PSK: Key management algorithm. wpa_pairwise=TKIP: WPA encryption protocol. rsn_pairwise=CCMP: WPA2 encryption protocol.Step 6: Enable IP Forwarding (/etc/sysctl.conf)net.ipv4.ip_forward=1 net.ipv4.ip_forward=1: Allows forwarding of packets between interfaces.Step 7: Set Up NAT (Network Address Translation) Apply iptables rules: sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADEsudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPTsudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT Save rules: sudo sh -c \"iptables-save &gt; /etc/iptables.ipv4.nat\" Load on boot (/etc/rc.local): iptables-restore &lt; /etc/iptables.ipv4.nat Step 8: Rebootsudo rebootSecurity Considerations Change default Raspberry Pi password. Regularly update the system. Consider a firewall (e.g., ufw).Alternative Options Network Interface: Use eth0 for Ethernet-based setups. DHCP Range: Adjust IP range and lease time based on network size. SSID and Password: Set according to your preference. Wireless Protocol (hw_mode): Choose based on compatibility (e.g., n for newer devices). Channel: Select non-overlapping channels (1, 6, 11) in crowded areas. Encryption: Use WPA3 if supported for enhanced security." }, { "title": "RegEx", "url": "/posts/regex/", "categories": "bash, terminal, shell", "tags": "servers, bash, terminal, linux, documentation, automation, shell", "date": "2024-01-23 00:00:00 +0100", "snippet": "Metacharacters .: Any character (except newline character) ^: Starts with $: Ends with *: Zero or more occurrences +: One or more occurrences ?: Zero or one occurrences {}: Exactly the specified number of occurrences |: Either or (): Capture and groupSpecial Sequences \\A: Returns a match if the specified characters are at the beginning of the string \\b: Returns a match where the specified characters are at the beginning or at the end of a word \\B: Returns a match where the specified characters are present, but NOT at the beginning (or at the end) of a word \\d: Any digit (0-9) \\D: Any non-digit character \\s: Any whitespace character \\S: Any non-whitespace character \\w: Any word character (a-z, A-Z, 0-9, _) \\W: Any non-word character \\Z: Returns a match if the specified characters are at the end of the stringSets [abc]: Will match any of the characters a, b, or c [^abc]: Matches any character except a, b, or c [a-z]: Matches any lowercase character [A-Z]: Matches any uppercase character [0-9]: Matches any digit [a-zA-Z]: Matches any alphabet character (both lowercase and uppercase) [0-9a-zA-Z]: Matches any alphanumeric characterPython Functions re.findall(): Returns a list containing all matches re.search(): Returns a Match object if there is a match anywhere in the string re.split(): Returns a list where the string has been split at each match re.sub(): Replaces one or many matches with a string" }, { "title": "Bash Pipe |", "url": "/posts/pipe/", "categories": "bash, terminal, shell", "tags": "servers, bash, terminal, linux, documentation, automation, shell", "date": "2024-01-23 00:00:00 +0100", "snippet": "Basic Usage Piping Between Commands: command1 | command2 Output of command1 is used as input for command2. Combining Multiple Commands Sequential Commands: command1 | command2 | command3 Output of command1 is passed to command2, and its output is passed to command3. Filtering and Processing Text Grep: command | grep 'pattern' Filters the output of command for lines containing ‘pattern’. Sort: command | sort Sorts the output of command. Awk: command | awk '{print $1}' Processes the output of command using awk (e.g., prints the first column). Sed: command | sed 's/old/new/' Processes the output of command using sed (e.g., replaces ‘old’ with ‘new’). Redirection and File Operations Tee: command | tee file.txt The output of command is both displayed and written to file.txt. Combining Text Streams Paste: command1 | paste - command2 Combines the output of command1 and command2 side by side. Networking and Data Transfer Curl and Processing: curl -s http://example.com | grep 'title' Fetches data from a URL and filters it. SSH and Remote Commands: ssh user@host 'cat file' | grep 'pattern' Executes a command on a remote machine and processes the output locally. Advanced Usage Process Substitution: diff &lt;(command1) &lt;(command2) Compares the output of two commands using diff. Xargs for Batch Processing: command1 | xargs -n1 command2 Uses the output of command1 as arguments for command2, one at a time. Debugging and Analysis Pipe Viewer (pv): command1 | pv | command2 Monitors the progress of data through a pipe between two commands. Chains with Conditional Execution AND and OR Lists: command1 &amp;&amp; command2 | command3command1 || command2 | command3 Executes command2 only if command1 succeeds/fails, then pipes to command3. " }, { "title": "MongoDB", "url": "/posts/mongodb/", "categories": "linux, database, db", "tags": "servers, linux, database, db, documentation, mongodb", "date": "2024-01-23 00:00:00 +0100", "snippet": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. It means fields can vary from document to document and data structure can be changed over time. The document model maps to the objects in your application code, making data easy to work with. Database: Contains collections. It’s a physical container for data. Collection: A group of MongoDB documents. It’s equivalent to a table in a relational database. Document: A single record in a collection. Documents are JSON-like field-and-value pairs.MongoDB is schema-less, which means a collection does not enforce document structure. This flexibility can be powerful, but it’s also important to ensure that your application correctly manages data.MongoDB with Python (using pymongo)Installationpip install pymongoBasic Usagefrom pymongo import MongoClient# Connect to MongoDBclient = MongoClient('mongodb://localhost:27017/')# Select Databasedb = client['mydatabase']# Select Collectioncollection = db['mycollection']# Insert Documentcollection.insert_one({\"name\": \"John\", \"address\": \"Highway 37\"})# Find One Documentx = collection.find_one()# Find All Documentsfor x in collection.find(): print(x)# Query the Collectionfor x in collection.find({\"name\": \"John\"}): print(x)# Update Documentcollection.update_one({\"name\": \"John\"}, {\"$set\": {\"address\": \"Redwood Avenue\"}})# Delete Documentcollection.delete_one({\"name\": \"John\"})# Close Connectionclient.close()MongoDB with Node.js (using mongodb package)Installationnpm install mongodbBasic Usageconst MongoClient = require('mongodb').MongoClient;const url = \"mongodb://localhost:27017/\";MongoClient.connect(url, function(err, db) { if (err) throw err; var dbo = db.db(\"mydatabase\"); // Insert Document dbo.collection(\"mycollection\").insertOne({ name: \"John\", address: \"Highway 37\" }, function(err, res) { if (err) throw err; console.log(\"1 document inserted\"); }); // Find One Document dbo.collection(\"mycollection\").findOne({}, function(err, result) { if (err) throw err; console.log(result.name); }); // Find All Documents dbo.collection(\"mycollection\").find({}).toArray(function(err, result) { if (err) throw err; console.log(result); }); // Query the Collection dbo.collection(\"mycollection\").find({ name: \"John\" }).toArray(function(err, result) { if (err) throw err; console.log(result); }); // Update Document dbo.collection(\"mycollection\").updateOne({ name: \"John\" }, { $set: { address: \"Redwood Avenue\" }}, function(err, res) { if (err) throw err; console.log(\"1 document updated\"); }); // Delete Document dbo.collection(\"mycollection\").deleteOne({ name: \"John\" }, function(err, obj) { if (err) throw err; console.log(\"1 document deleted\"); db.close(); });});" }, { "title": "HTMX", "url": "/posts/htmx/", "categories": "Web Development, Frontend, JavaScript", "tags": "HTMX, HTML, AJAX, Frontend, Web Development", "date": "2024-01-23 00:00:00 +0100", "snippet": "HTMX is a modern JavaScript library that allows you to access AJAX, CSS Transitions, WebSockets, and Server-Sent Events directly in HTML, making it easier to build dynamic web applications. HTMX is designed to be highly accessible, requiring minimal JavaScript to enhance web pages.Getting Started with HTMXInstallationInclude HTMX in your HTML:&lt;script src=\"https://unpkg.com/htmx.org\"&gt;&lt;/script&gt;Basic UsageHTMX extends HTML by adding custom attributes. The most common attributes are: hx-get: Load content from a URL via AJAX GET request. hx-post: Send data to a server via AJAX POST request. hx-put: Update data on a server via AJAX PUT request. hx-delete: Send a DELETE request to a server. hx-trigger: Define when the AJAX request should be triggered. hx-target: Specifies where to place the returned content. hx-swap: Controls how the new content is swapped into the DOM.ExamplesBasic GET Request&lt;a href=\"/example\" hx-get=\"/example\" hx-trigger=\"click\"&gt;Load Content&lt;/a&gt;Form Submission via POST&lt;form hx-post=\"/submit-form\" hx-target=\"#result\"&gt; &lt;input type=\"text\" name=\"message\"&gt; &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;&lt;/form&gt;&lt;div id=\"result\"&gt;&lt;/div&gt;Lazy Loading&lt;div hx-get=\"/load-content\" hx-trigger=\"revealed\"&gt; &lt;!-- Content will be loaded when this div is scrolled into view --&gt;&lt;/div&gt;Advanced FeaturesWebSocketsHTMX can interact with WebSockets:&lt;div hx-ws=\"connect:/my-websocket\"&gt; &lt;!-- Content here can be updated via WebSocket messages --&gt;&lt;/div&gt;Server-Sent Events (SSE)HTMX supports SSE for real-time updates from the server:&lt;div hx-sse=\"connect:/my-sse\"&gt; &lt;!-- Content here can be updated in real-time from the server --&gt;&lt;/div&gt;Boosting Links and FormsThe hx-boost attribute enhances standard HTML forms and links with AJAX capabilities:&lt;!-- Link boosting --&gt;&lt;a href=\"/example\" hx-boost=\"true\"&gt;Load with AJAX&lt;/a&gt;&lt;!-- Form boosting --&gt;&lt;form action=\"/submit-form\" method=\"post\" hx-boost=\"true\"&gt; &lt;!-- Form elements --&gt;&lt;/form&gt;EventsHTMX emits custom events for various stages of the request lifecycle, such as: htmx:beforeRequest htmx:afterRequest htmx:beforeSwap htmx:afterSwapExample of handling an HTMX event:document.body.addEventListener('htmx:afterSwap', function(event) { console.log('Content swapped!', event.detail);});Tips and Best Practices Progressive Enhancement: Use HTMX as an enhancement; ensure basic functionality works without JavaScript. Debugging: Use browser developer tools to inspect HTMX requests and responses. Performance: Keep an eye on the number of AJAX requests to avoid performance issues.Additional Resources HTMX Official Documentation HTMX GitHub Repository" }, { "title": "React Native", "url": "/posts/reactnative/", "categories": "js, documentation, webserver, mobile", "tags": "js, documentation, webserver, webdev, framework, application, react, mobile", "date": "2023-08-17 00:00:00 +0200", "snippet": "InstallThe quickest way to set up a new react native project is with the Expo CLI.npm install -g expo-cliSetupnpx create-expo-app my-appcd my-appcode . # open in vscodeexpo startIf expo start does not work try expo start --tunnel.App.jsThe App.js file is the root component of the application. It is the first component that is rendered when the application starts.import { StatusBar } from 'expo-status-bar';import { StyleSheet, Text, View } from 'react-native';export default function App() { return ( &lt;View style={styles.container}&gt; &lt;Text&gt;Open up App.js to start working on your app!&lt;/Text&gt; &lt;StatusBar style=\"auto\" /&gt; &lt;/View&gt; );}const styles = StyleSheet.create({ container: { flex: 1, backgroundColor: '#fff', alignItems: 'center', justifyContent: 'center', },});The second import line is used to import native components from the react native library. The View component is like a div in html. It is used to wrap other components. For styling the StyleSheet component is used. The atributes are the same as in CSS except they are written in camelCase ComponentsNative ComponentsSafeAreaViewThe SafeAreaView component is used to make sure the content is not hidden by the status bar or the notch on the iPhone.It is recommended to use this component as the root component of the application.export default function App() { return ( &lt;SafeAreaView style={styles.container}&gt; &lt;StatusBar style=\"auto\" /&gt; &lt;/SafeAreaView&gt; );}TextThe Text component is used to display text.export default function App() { return ( &lt;SafeAreaView&gt; &lt;Text&gt;Hello World!&lt;/Text&gt; &lt;/SafeAreaView&gt; );}Event HandlingTouchable ComponentsThe TouchableOpacity component is used to make other components touchable.export default function App() { return ( &lt;SafeAreaView&gt; &lt;TouchableOpacity onPress={() =&gt; console.log('Image tapped')}&gt; &lt;Image source={require('./assets/icon.png')} /&gt; &lt;/TouchableOpacity&gt; &lt;/SafeAreaView&gt; );}ButtonsThe Button component is used to create a button.export default function App() { return ( &lt;SafeAreaView&gt; &lt;Button title='Click Me' onPress={() =&gt; console.log('Button tapped')} /&gt; &lt;/SafeAreaView&gt; );}HooksuseStateChanges the state of the component.import React, { useState } from 'react';export default function App() { const [text, setText] = useState('Open up App.js to start working on your app!'); return ( &lt;SafeAreaView&gt; &lt;Text onPress={() =&gt; setText('Hello World!')}&gt;{text}&lt;/Text&gt; &lt;/SafeAreaView&gt; );}useEffectRuns code when the component is rendered if the [] are empty or when one of the given variables changes.import React, { useEffect } from 'react';export default function App() { useEffect(() =&gt; { console.log('Hello World'); }, []); return ( &lt;View&gt; &lt;Text&gt;Open up App.js to start working on your app!&lt;/Text&gt; &lt;/View&gt; );}useRef" }, { "title": "Redis", "url": "/posts/redis/", "categories": "linux, database, db", "tags": "servers, linux, database, db, documentation, redis", "date": "2023-05-07 00:00:00 +0200", "snippet": "OverviewRedis (Remote Dictionary Server) is an in-memory data structure store. It functions as a database, cache, and message broker, with support for various data structures like strings, hashes, lists, sets, and more. Renowned for its speed and efficiency, Redis is ideal for scenarios requiring fast operations, such as caching, session management, and real-time analytics.Key Features Data Structures: Supports strings, lists, sets, sorted sets, hashes, bitmaps, hyperloglogs, and geospatial indexes. Performance: High-speed operations, supporting millions of requests per second. Transactions: Atomic execution of a group of commands. Pub/Sub: Implements Publisher/Subscriber messaging paradigm. Persistence: Offers options like RDB snapshots and AOF (Append Only File) logs. Lua Scripting: Advanced scripting capabilities for complex operations. Clustering: Supports distributed data storage for scalability and high availability.Available Operations Strings: Basic operations like SET, GET, INCR, DECR. Lists: Ordered collections of strings with operations like LPUSH, RPUSH, LPOP, RPOP, LRANGE. Sets: Unordered collection of strings. Operations include SADD, SMEMBERS, SINTER. Sorted Sets: Sets ordered by a score, useful for leaderboards. Commands include ZADD, ZRANGE. Hashes: Store, retrieve, and manage hash tables with HSET, HGETALL, etc. Pub/Sub: Messaging with PUBLISH, SUBSCRIBE. Transactions: MULTI, EXEC for atomic command execution.Code ExamplesPython Code ExamplesConnection to Redisimport redis# Connect to Redisredis_client = redis.Redis(host='localhost', port=6379, db=0)Working with Strings# Set a stringredis_client.set('hello', 'world')# Get a stringprint(redis_client.get('hello'))List Operations# Push to listredis_client.lpush('mylist', 'hello')# Pop from listprint(redis_client.rpop('mylist'))Set Operations# Add to setredis_client.sadd('myset', 'a', 'b')# Get all members of the setprint(redis_client.smembers('myset'))Transactions# Transaction using pipelinepipeline = redis_client.pipeline()pipeline.set('foo', 'bar')pipeline.incr('baz')pipeline.execute()Node.js Code ExamplesConnection to Redisconst redis = require('redis');// Connect to Redisconst client = redis.createClient({ host: 'localhost', port: 6379});client.on('error', (err) =&gt; console.log('Redis Client Error', err));Working with Strings// Set a stringclient.set('hello', 'world', redis.print);// Get a stringclient.get('hello', (err, reply) =&gt; { console.log(reply);});List Operations// Push to listclient.lpush('mylist', 'hello', redis.print);// Pop from listclient.rpop('mylist', (err, reply) =&gt; { console.log(reply);});Set Operations// Add to setclient.sadd('myset', 'a', 'b', redis.print);// Get all members of the setclient.smembers('myset', (err, replies) =&gt; { replies.forEach((reply, i) =&gt; { console.log(` ${i}: ${reply}`); });});Transactions// Transaction using multiconst multi = client.multi();multi.set('foo', 'bar');multi.incr('baz');multi.exec((err, replies) =&gt; { console.log(replies);});" }, { "title": "Unraid", "url": "/posts/unraid/", "categories": "bash, terminal, shell, linux", "tags": "servers, bash, terminal, linux, documentation, automation, shell, ssh", "date": "2023-02-21 00:00:00 +0100", "snippet": "Installation download the USB creator from the unraid website create a bootable USB stick with the USB creator (&lt;= 2GB) enable Advanced/CPU config/SVM or VMX (virtualization) in the BIOS enable IOMMU in the BIOS boot from the USB stick (you may need to change the boot order in the BIOS and disable secure boot) (optional) run Memtest86+ to check for memory errors boot into unraidGetting started access the web interface at http://&lt;ip-address&gt;:80 set root password buy a license or use the trial check if all disks are detected in the main tabArray setup select your parity drive(s) in the main tab (use the biggest drives) select the drive(s) for the cache pool (use the fastest drives) put the rest of the drives in the Disk pool and press start array now all drives have to be formatted and the array has to be builtBasic setup setup shares (at least on appdata cache only share for docker containers) (optional) setup share for time machine backups setup a second user to access shares from other devices go to Apps and install the Community Applications plugin install gpu drivers (if you have a gpu / nvidia recommended)Plugins Fix Common Problems CA Auto Update Applications CA Backup / Restore Appdata CA Cleanup Appdata Dynamix File Manager User Scripts Enhanced Log Viewer GPU Statistics My ServersDockerPass a GPU to a docker containerdocker run -d \\ --name='plex' \\ --net='bridge' \\ -e TZ=\"Europe/Vienna\" \\ -e HOST_OS=\"Unraid\" \\ -e HOST_HOSTNAME=\"Tower\" \\ -e HOST_CONTAINERNAME=\"plex\" \\ -e 'VERSION'='docker' -e 'NVIDIA_VISIBLE_DEVICES'='GPU-b39df49c-2a34-29f1-d923-b57c615d22eb' \\ -e 'PUID'='99' \\ -e 'PGID'='100' \\ -l net.unraid.docker.managed=dockerman \\ -l net.unraid.docker.webui='http://[IP]:[PORT:32400]/web' \\ -l net.unraid.docker.icon='https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-icon.png' \\ -p '32400:32400/tcp' \\ -p '3005:3005/tcp' \\ -p '8324:8324/tcp' \\ -p '32469:32469/tcp' \\ -p '1900:1900/udp' \\ -p '32410:32410/udp' \\ -p '32412:32412/udp' \\ -p '32413:32413/udp' -p '32414:32414/udp' \\ -v '/mnt/user/Media/':'/movies':'rw' \\ -v '/mnt/user/Media/':'/tv':'rw' \\ -v '/mnt/user/Media/':'/music':'rw' \\ -v '/tmp/transcoding/':'/transcode':'rw' \\ -v '/mnt/user/appdata/plex':'/config':'rw' \\ --runtime=nvidia 'linuxserver/plex'Scripts Dump_GPU_vBIOS (no shedule) nvidia_powersave (first array start + hourly) unlocknvidia (remove 3 streams limit / run at array start) increase_log_size (increase log size from default 128MB to 2GB / run at array start) clear_log" }, { "title": "WebSockets", "url": "/posts/websockets/", "categories": "Python, JavaScript, Documentation, WebSockets", "tags": "Python, JavaScript, Documentation, Automation, Backend, Full-Duplex, TCP, WebSockets", "date": "2023-01-27 00:00:00 +0100", "snippet": "WebSockets protocol allows for full-duplex communication between a client and a server over a single, long-lasting TCP connection. It is particularly useful in scenarios where real-time, bidirectional communication is needed, such as chat applications, live feeds, and interactive games. Unlike HTTP, WebSockets keep the connection open, enabling both parties to send data independently at any time.Python ImplementationInstallationpip install websocketsWebSocket Serverimport asyncioimport websocketsIP = 'localhost'PORT = 8765async def handle_connection(websocket, path): async for message in websocket: await websocket.send(message) print(f'Received: {message}')start_server = websockets.serve(handle_connection, IP, PORT)asyncio.get_event_loop().run_until_complete(start_server)asyncio.get_event_loop().run_forever()WebSocket Clientimport asyncioimport websocketsIP = 'localhost'PORT = 8765async def communicate(): async with websockets.connect(f'ws://{IP}:{PORT}') as websocket: name = input(\"Enter your name: \") await websocket.send(name) response = await websocket.recv() print(f\"Server says: {response}\")asyncio.get_event_loop().run_until_complete(communicate())Node.js ImplementationInstallationnpm install wsWebSocket Serverconst WebSocket = require('ws');const server = new WebSocket.Server({ port: 8765 });server.on('connection', (socket) =&gt; { socket.on('message', (message) =&gt; { console.log(`Received message: ${message}`); socket.send(`Hello, ${message}`); }); socket.send('Welcome to the WebSocket server!');});WebSocket Clientconst WebSocket = require('ws');const socket = new WebSocket('ws://localhost:8765');socket.addEventListener('open', () =&gt; { socket.send('Hello Server!');});socket.addEventListener('message', (event) =&gt; { console.log('Message from server:', event.data);});Tips and Best Practices SSL/TLS Usage: For secure communication, use wss:// (WebSocket Secure) instead of ws://. This is crucial for production environments. Handling Connections: Ensure robust error handling and reconnection logic in both client and server code. Scaling: Consider using WebSocket libraries that support clustering and load balancing for handling multiple connections efficiently. Proxy Configuration: When deploying behind a proxy like nginx, configure the proxy to correctly forward WebSocket traffic to your server. Heartbeats: Implement heartbeats (regular pings) to keep the connection alive, especially if you’re dealing with network components that may close idle connections.Additional Resources MDN WebSockets API WebSocket-Node for Node.js websockets library for Python" }, { "title": "CSS Pseudo Classes", "url": "/posts/css_pseudo_classes/", "categories": "CSS, webdev", "tags": "CSS, webdev", "date": "2023-01-26 00:00:00 +0100", "snippet": ":is()Before.example h3,.example h4,.example a { color: red; }Now.example :is(h3, h4, a) { color: red; }:has()Before.example img { color: red; }Now.example :has(img) { color: red; }" }, { "title": "React", "url": "/posts/react/", "categories": "js, documentation, webserver, webdev", "tags": "js, documentation, webserver, webdev, framework, application, react", "date": "2023-01-14 00:00:00 +0100", "snippet": "InstallMake sure you have Node.js installed. Then run the following command to make shure the latest version of create-react-app is installed globally.npm uninstall -g create-react-appnpm install -g create-react-appUsageCreate a new app with the name my-app and run it on localhost:3000.npx create-react-app my-appcd my-appnpm startComponentsEverything in React is a component. Components are the building blocks of React apps. A component is a JavaScript function that returns HTML elements to be rendered to the page. Components can be written as a function or a class.By default, React components are written as JavaScript functions and everything is in the App.js file. The App.js file is the root component of the application. It is the first component that is rendered when the application starts.It is usefull to put all components in .jsx: files and in a folder called components. This makes it easier to find the components and to reuse them in other projects.It makes sense to write components as const functions and functions as normal functions. This makes it easier to read and understand the code.export const App = () =&gt; { return ( &lt;div&gt; &lt;Navbar /&gt; &lt;div className='main'&gt; {movies.map(createCard)} &lt;/div&gt; &lt;Footer /&gt; &lt;/div&gt; );};export default App; use { } to write js expressions in components use className instead of class to set the class of an element (use camelCase instead of kebab-case as in html) use export default to export a componentexport const Card = (props) =&gt; { return ( &lt;a href='#home'&gt; &lt;img className='card' src={props.src} alt='#' /&gt; &lt;/a&gt; );};function createCard(movie) { return &lt;Card key={movie.id} src={movie.posterurl} /&gt;;}export { createCard };If you want to map a component every time you need to use the key attribute. The key attribute is used to identify each element in the list. It is used by React to keep track of the list items and to update the list efficiently. The key attribute is not accessible in the component. Every element in the list needs to have a unique key attribute.documentation" }, { "title": "Python Modules", "url": "/posts/python-modules/", "categories": "python, documentation", "tags": "python, documentation, automation, backend, modules, eel, pyautogui, telegram, bot, webserver, yaml, selenium, pick, discord, beautifulsoup4, bs4", "date": "2023-01-09 00:00:00 +0100", "snippet": "YAMLinstallpip3 install pyyamlread data from a .yml fileUsageimport yamlwith open('config.yml', 'r') as file: yaml_file = yaml.safe_load(file)print(yaml_file['prime_numbers'][0])print(yaml_file['rest']['url'])rest: url: \"https://example.org/primenumbers/v1\" port: 8443prime_numbers: [2, 3, 5, 7, 11, 13, 17, 19]Icecreamicecream is a Python library that makes it easier to debug your code by printing variables and expressions to stdout. It’s a drop-in replacement for print() that adds a lot of useful features.installpip3 install icecreamUsageimport icecream as icefrom icecream import ictest = \"hello world\"ic(test)output:ic| test: 'hello world'DocumentationYou don’t need to import icecream in every file. Instead you can add this to your main.py:ice.install()You can disable or enable icecream with:ic.disable()ic.enable()icecreamPickinstallpip3 install pickUsageSelect multiple itemsfrom pick import picktitle = 'Please choose your favorite programming language (press SPACE to mark, ENTER to continue): 'options = ['Java', 'JavaScript', 'Python', 'PHP', 'C++', 'Erlang', 'Haskell']selected = pick(options, title, multiselect=True, min_selection_count=1)print(selected)[('Java', 0), ('C++', 4)]Returns an array with Tuples containing the selected String and the coressponding indexYou can access items like a 2d arraySelect one itemfrom pick import picktitle = 'Please choose your favorite programming language: 'options = ['Java', 'JavaScript', 'Python', 'PHP', 'C++', 'Erlang', 'Haskell']option, index = pick(options, title)print(option)print(index)Options options: a list of options to choose from title: (optional) a title above options list indicator: (optional) custom the selection indicator, defaults to * default_index: (optional) set this if the default selected option is not the first one multiselect: (optional), if set to True its possible to select multiple items by hitting SPACE min_selection_count: (optional) for multi select feature to dictate a minimum of selected items before continuing screen: (optional), if you are using pick within an existing curses application set this to your existing screen object. It is assumed this has initialised in the standard way (e.g. via curses.wrapper(), or curses.noecho(); curses.cbreak(); screen.kepad(True))Beautiful Soup 4installpip3 install requestspip3 install beautifulsoup4UsageGet HTMLimport requestsfrom bs4 import BeautifulSoupURL = \"https://example.org\"r = requests.get(URL)soup = BeautifulSoup(r.content, 'html.parser')Format HTMLprint(soup.prettify())Search for elementsSearch for elements by tag and class nametag = soup.find('h2', class_='sc-1b6bgon-2 edmOvr font-primary')Search for elements by tag and idtag = soup.find('h2', id='title')Search for elements by tag and attributetag = soup.find('h2', attrs={'data-id': 'title'})Get text and attributesGet text inside a tagtext = tag.textGet attribute valuehref = tag.get('href')Seleniuminstallbrew install geckodriverpip3 install seleniumautomate web browserUsagefrom selenium import webdriverfrom selenium.webdriver.common.by import Byfrom os import system as cmddriver = webdriver.Firefox() #open browserdriver.maximize_window() #maximize windowdriver.get(\"https://www.google.com\") #open urltag_name = driver.find_elements(by=By.TAG_NAME, value=\"a\") #find all elements with tag name aclass_names = driver.find_elements(by=By.CLASS_NAME, value=\"myclass\") #find all elements with class name myclassid_name = driver.find_elements(by=By.ID, value=\"myid\") #find element with id myidelement = tag_name[0] #select first elementelement.click() #click elementinner_html_text = element.text #get text inside a taghref = element.get_attribute(\"href\") #get attribute valueurl = driver.current_url #get current urldriver.close() #close browsercmd(\"pkill firefox\") #close all firefox instancesheadless modeRun selenium without opening a browser window.op = webdriver.FirefoxOptions()op.add_argument('--headless')driver = webdriver.Firefox(options=op)Streamlitinstallpip3 install streamlitUsageimport streamlit as stst.title(\"Hello World!\")streamlit run main.pyComponentstitleThe title of a streamlit pagest.title(\"Hello World!\")Display textst.text('Fixed width text')st.markdown('_Markdown_') # see *st.latex(r''' e^{i\\pi} + 1 = 0 ''')st.write('Most objects') # df, err, func, keras!st.write(['st', 'is &lt;', 3]) # see *st.title('My title')st.header('My header')st.subheader('My sub')st.code('for i in range(8): foo()')* optional kwarg unsafe_allow_html = TrueDisplay datast.dataframe(my_dataframe)st.table(data.iloc[0:10])st.json({'foo':'bar','fu':'ba'})st.metric('My metric', 42, 2)Display mediast.image('./header.png')st.audio(data)st.video(data)Display interactive widgetsst.button('Click me')st.data_editor('Edit data', data)st.checkbox('I agree')st.toggle('Enable')st.radio('Pick one', ['cats', 'dogs'])st.selectbox('Pick one', ['cats', 'dogs'])st.multiselect('Buy', ['milk', 'apples', 'potatoes'])st.slider('Pick a number', 0, 100)st.select_slider('Pick a size', ['S', 'M', 'L'])st.text_input('First name')st.number_input('Pick a number', 0, 10)st.text_area('Text to translate')st.date_input('Your birthday')st.time_input('Meeting time')st.file_uploader('Upload a CSV')st.download_button('Download file', data)st.camera_input(\"Take a picture\")st.color_picker('Pick a color')LayoutStreamlt uses a column based layout. You can add columns with st.columns() and then add elements to the columns.col1, col2 = st.columns(2) # split into 2 columnswith col1: st.write('This will appear in column 1')with col2: st.write('This will appear in column 2')Multiple PagesStremlit can automatically create a sidebar for you. If you create every page in a seperate python file just put every page file except the main file in a folder called pages. Then a sidebar will be created automatically.Pyautoguiinstallpip3 install pyautoguiUsageimport pyautogui as bot#only needed if you want to use the mousesize = bot.size()width = size[0]height = size[1]# left clickbot.click(\"left\")# right clickbot.click(\"right\")# drag from (0, 0) to (100, 100) relatively with a duration of 0.1sbot.drag(0, 0, 100, 100, absolute=False, duration=0.1)bot.press(\"enter\")bot.press(\"space\")bot.keyUp(\"shift\")bot.keyDown(\"shift\")bot.write(\"Hello world!\", interval=0.25) #write text with 0.25 seconds delay between each key Keep in mind that pyautogui may use a different keyboard layout than your system. For example, if you use a german keyboard layout, the key “z” is mapped to the key “y” in pyautogui.documentationEelpip3 install eelRun a webserver with python in the backend and javascript in the frontendUsageAll website files are in the site folder. This starts a webserver on localhost:8000 and opens the index.html file in firefoximport eeleel.init('site')@eel.expose #expose function to javascriptdef hello_world(): print(\"Hello World!\")eel.start('index.html', mode='firefox', host='localhost', port=8000)eel.hello_world() //call python functionfunction hello_world() { eel.hello_world() //wrap python function in javascript function}passing arguments@eel.exposedef get_ip(): return 'loclahost'Here the python function returns a string which then is used in javascriptfunction getIP() { eel.get_ip()((ip) =&gt; { document.querySelector('#ip').innerHTML = ip })}pyfigletpyfiglet is a python library to create ascii art from textpip3 install pyfigletUsageimport pyfigletdef text_to_ascii(text: str): ascii_art = pyfiglet.figlet_format(text) print(ascii_art)text_to_ascii(\"Hello World!\")You can also pass options to the figlet_format() function to change the font and layout of the ASCII art.text_to_ascii(\"Hello World!\", font=\"big\")This will change the font to “big”You can see the list of available fonts by runningprint(pyfiglet.getFonts())Discord Botpip3 install discord.pyUsageimport discordclient = discord.Client()@client.eventasync def on_ready(): print(\"Bot is ready.\")@client.eventasync def on_message(message): if message.content.startswith(\"!hello\"): await message.channel.send(\"Hello!\")client.run(\"YOUR_TOKEN_HERE\")To check for admin permissions:if message.author == client.user and str(message.author) != ADMIN: breakTelegram Botpip3 install python-telegram-botTo create a new bot serarch for @BotFather in telegram and type /newbot.Usagestarter template:import loggingfrom telegram import Updatefrom telegram.ext import *TOKEN = 'your bot token'logging.basicConfig( format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)application = ApplicationBuilder().token(TOKEN).build()# /start functionasync def start(update: Update, context: ContextTypes.DEFAULT_TYPE): await context.bot.send_message(chat_id=update.effective_chat.id, text=\"Ok I'm working on it\")# main bot functionasync def bot_response(update: Update, context: ContextTypes.DEFAULT_TYPE): text = update.message.text.lower() if text.__contains__('hi'): response = 'Hello' await context.bot.send_message(chat_id=update.effective_chat.id, text=response) # handle slash commandsapplication.add_handler(CommandHandler('start', start))# handle normal messagesapplication.add_handler(MessageHandler(filters.TEXT, bot_response))application.run_polling()documentation" }, { "title": "Nala", "url": "/posts/nala/", "categories": "tutorial, install, packagemanager", "tags": "linux, apt, derbian, tutorial, install, packagemanager", "date": "2023-01-03 00:00:00 +0100", "snippet": "Nala is a nicer front end for apt. It gives more information about the packages and makes it easyer to keep track of everything.Installationsudo apt update &amp;&amp; sudo apt upgrade -ysudo apt install -y wgetecho \"deb [arch=amd64,arm64,armhf] http://deb.volian.org/volian/ scar main\" | sudo tee /etc/apt/sources.list.d/volian-archive-scar-unstable.listwget -qO - https://deb.volian.org/volian/scar.key | sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg &gt; /dev/nullsudo apt update &amp;&amp; sudo apt install nala -yUsage update all packages sudo nala update &amp;&amp; sudo nala upgrade -y install a package sudo nala install -y &lt;package&gt; remove a package sudo nala remove -y &lt;package&gt; list installed packages nala list -i show package information nala show &lt;package&gt; search for a package nala search &lt;package&gt;You can add -y to execute without confirmation." }, { "title": "Quickemu", "url": "/posts/quickemu/", "categories": "bash, terminal, shell, linux, vm", "tags": "servers, bash, terminal, linux, documentation, automation, shell, ssh, vm, quickemu, quickgui, quemu", "date": "2022-12-28 00:00:00 +0100", "snippet": "This is a GitHub project that installs virtual machines for more than 300+ spins of Linux, Windows, and macOS!The ProjectquickemuInstallationInstall for Debiansudo apt install qemu bash coreutils ovmf grep jq lsb procps python3 genisoimage usbutils util-linux sed spice-client-gtk swtpm wget xdg-user-dirs zsync unzipsudo apt-add-repository ppa:flexiondotorg/quickemusudo apt updatesudo apt install quickemuGUI Installsudo add-apt-repository ppa:yannick-mauray/quickguisudo apt updatesudo apt install quickguiOther Distros (Use NIX Installer)nix-env -iA nixpkgs.quickemuCLI Usagequickget ubuntu-mate 22.04quickemu --vm ubuntu-mate-22.04.confThis is pretty easy to manage with it’s own dedicated directory. Ex. ~/VMs" }, { "title": "Yay", "url": "/posts/yay/", "categories": "tutorial, install, packagemanager", "tags": "linux, tutorial, install, packagemanager, amd64, yay", "date": "2022-12-19 00:00:00 +0100", "snippet": "Yay is an AUR helper written in go. It is a wrapper around pacman and makepkg.It is designed to be used with the Arch User Repository to provide an easy way to install packages from the AUR (e.g. vscode).Installationsudo pacman -S --noconfirm base-develsudo git clone https://aur.archlinux.org/yay.gitsudo chown -R $USER:users ./yaysudo chown -W $USER:users ./yaycd yaymakepkg -sicd ../sudo rm -fr yay update all packages yay -Syu --noconfirm install a package yay -S --noconfirm &lt;package&gt; remove a package yay -R --noconfirm &lt;package&gt; list installed packages yay -Q search for a package yay -Ss &lt;package&gt;You can add --noconfirm to execute without confirmation." }, { "title": "Linux", "url": "/posts/linux/", "categories": "bash, terminal, shell, linux", "tags": "servers, bash, terminal, linux, documentation, automation, shell, ssh", "date": "2022-12-19 00:00:00 +0100", "snippet": "DistributionsArch Linuxget isoIf you want a graphical install or install without manuall partitioning you can use the install script by typing archinstall or use EndeavourOSArch Linux is a Linux distribution for computers based on the x86-64 architecture. It is a rolling release distribution, which means that it does not have a release cycle. Instead, new versions of packages are released as soon as they are ready. This allows Arch Linux to always be up-to-date but also means that it is not as stable as other distributions and you can break it if you don’t know what your doing.You may have to change the keyboard layout.loadkeys deTo change it permanently edit /etc/vconsole.conf and add KEYMAP=de to it.Installation over wifiYou can check if the WiFi is blocked by running rfkill list.If it says Soft blocked: yes, then run rfkill unblock wifiAfter unblocking the WiFi, you can connect to it. Go through these 5 steps: Run iwctl Run device list, and find your device name. Run station [device name] scan Run station [device name] get-networks Find your network, and run station [device name] connect [network name], enter your password and run exit. You can test if you have internet connection by running ping github.com, and then Press Ctrl and C to stop the ping test.Package Manager update all packages sodp pacman -Syu --noconfirm install a package sudo pacman -S --noconfirm &lt;package&gt; remove a package sudo pacman -R --noconfirm &lt;package&gt; list installed packages pacman -Q search for a package pacman -Ss &lt;package&gt;You can add --noconfirm to execute without confirmation. If you want to install a package from the AUR (like vscode) you can use yay or paru.Debianget isoDebian is a Linux distribution composed of free and open-source software, developed by the community-supported Debian Project. The Debian Project was first announced on August 16, 1993 by Ian Murdock. The Debian stable distribution is maintained by the Debian Stable Release Team. It is the most popular Linux distribution for servers. It is stable and secure, but most of the time it is not the latest version of the software.Package Manager update all packages sudo apt update &amp;&amp; sudo apt upgrade -y install a package sudo apt install -y &lt;package&gt; remove a package sudo apt remove -y &lt;package&gt; list installed packages dpkg -l search for a package apt search &lt;package&gt;You can add -y to execute without confirmation.Fedoraget isoFedora is a Linux distribution developed by the community-supported Fedora Project and owned by Red Hat. It is a free and open-source operating system based on the Linux kernel and GNU packages. It is sponsored by Red Hat and is a part of the Red Hat Enterprise Linux family. It is the most popular Linux distribution for desktops. It is stable and secure.Package Manager update all packages sudo dnf update &amp;&amp; sudo dnf upgrade -y install a package sudo dnf install -y &lt;package&gt; remove a package sudo dnf remove -y &lt;package&gt; list installed packages rpm -qa search for a package dnf search &lt;package&gt;You can add -y to execute without confirmation.NixOSget isoNixOS is a Linux distribution based on the Nix package manager. It is a free and open-source operating system that is declarative, purely functional, and multi-user. The entire system is configured in a configuration file with makes it easy to reproduce and share. It is stable, secure and up to date.Package Manager update all packages nix-env -u install packages nix-env -iA nixos.&lt;packagename&gt; erase packages nix-env -e &lt;packagename&gt; list installed packages nix-env -q search for a package nix-env -qaP | grep &lt;packagename&gt;You can use the nix packagemanager seperatlly from NixOS on all Unix based OS.search nix packages nix packagemanagersudoRepeat last command with sudosudo !!sshssh into a serverssh username@server_ipssh into a server with a specific portssh -p 2222 username@server_ipsend a command to a serverssh username@server_ip \"ls\"send a file to a serverscp file.txt username@server_ip:/home/username/get a file from a serverscp username@server_ip:/home/username/file.txt .sshpasssshpass into a serversshpass -p \"password\" ssh username@server_ipsend a command to a server with sshpasssshpass -p \"password\" ssh username@server_ip \"ls\"send file to a server with sshpasssshpass -p \"password\" scp file.txt username@server_ip:/home/username/Systemd Commandssystemctl startStart a service:systemctl start service_namesystemctl stopStop a service:systemctl stop service_namesystemctl restartRestart a service:systemctl restart service_namesystemctl enableEnable a service:systemctl enable service_name --nowsystemctl disableDisable a service:systemctl disable service_namesystemctl statusCheck the status of a service:systemctl status service_namesystemctl list-unitsList all units:systemctl list-unitsvirshvirsh is a command line tool for managing virtual machines.It is part of the libvirt package.virsh listvirsh list --allvirsh startstart a virtual machinevirsh start vm_namevirsh shutdownshutdown a virtual machinevirsh shutdown vm_namevirsh destroydestroy a virtual machinevirsh destroy vm_namevirsh undefineundefine a virtual machine (remove it from the list)virsh undefine vm_namevirsh consoleconnect to the console of a virtual machinevirsh console vm_namevirsh create snapshotcreate a snapshot of a virtual machinevirsh snapshot-create-as vm_name snapshot_namevirsh snapshot-listlist all snapshots of a virtual machinevirsh snapshot-list vm_namevirsh snapshot-revertrevert a virtual machine to a snapshotvirsh snapshot-revert vm_name snapshot_namevirsh snapshot-deletedelete a snapshot of a virtual machinevirsh snapshot-delete vm_name snapshot_nameSystem checksChecking the ramdmidecode --type 17" }, { "title": "Scoop", "url": "/posts/scoop/", "categories": "tutorial, install, packagemanager", "tags": "tutorial, install, packagemanager, windows, shell", "date": "2022-10-06 00:00:00 +0200", "snippet": "Chocolatey is a package manager for Windows. It is similar to apt, yum, and other package managers.InstallOpen a powershell (no admin) and run the following command:Set-ExecutionPolicy RemoteSigned -Scope CurrentUser # Optional: Needed to run a remote script the first timeirm get.scoop.sh | iexscoop install gitscoop bucket add extrasscoop bucket add versionsUsagecheck available packagesscoop search &lt;package&gt;install a packagescoop install &lt;package&gt;uninstall a packagescoop uninstall &lt;package&gt;Scoop" }, { "title": "Chocolatey", "url": "/posts/chocolatey/", "categories": "tutorial, install, packagemanager", "tags": "tutorial, install, packagemanager, windows, shell", "date": "2022-10-06 00:00:00 +0200", "snippet": "Chocolatey is a package manager for Windows. It is similar to apt, yum, and other package managers.InstallOpen a powershell as administrator and run the following command:@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\" &amp;&amp; SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"Before you can use Chocolatey, you need to restart your shell.Usagecheck available packageschoco search &lt;package&gt;install a packagechoco install &lt;package&gt;uninstall a packagechoco uninstall &lt;package&gt;Chocolatey" }, { "title": "Electron", "url": "/posts/electron/", "categories": "js, documentation, webserver, webdev", "tags": "js, documentation, webserver, webdev, framework, application, electron", "date": "2022-09-30 00:00:00 +0200", "snippet": "Get startedCreate a new projectnpx create-electron-app@latest my-app nodejs and npm must be installedRun the appcd my-appnpm startBuild the appBuild the app for your current platformnpm run make" }, { "title": "Zsh Shell", "url": "/posts/zsh_shell/", "categories": "terminal, shell", "tags": "servers, bash, terminal, linux, install, automation, shell, zsh", "date": "2022-09-23 00:00:00 +0200", "snippet": "Why Zsh? automatic cd (change directory) when you type a directory name suggestions based on previous commands spelling correction approximate completion various plugins and themesInstallationbrew install zsh zsh-autosuggestions zsh-syntax-highlighting neofetchecho \"plugins=(zsh-autosuggestions)\" &gt;&gt; ~/.zshrcsudo git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10kecho 'ZSH_THEME=\"powerlevel10k/powerlevel10k\"' &gt;&gt; ~/.zshrccurl -L http://install.ohmyz.sh | shecho \"neofetch\" &gt;&gt; ~/.zshrcchsh -s $(which zsh)source ~/.zshrcConfigurationIf you want to access the configuration file from the terminal, you can use the following command:nano ~/.zshrc" }, { "title": "TypeScript", "url": "/posts/ts/", "categories": "TypeScript, JavaScript, Documentation, Web Development", "tags": "TypeScript, JavaScript, Documentation, Webserver, Webdev, Frontend", "date": "2022-09-20 00:00:00 +0200", "snippet": "TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale. It adds static types to JavaScript, which can help catch errors early and enhance the development experience.Getting Started with TypeScriptInstallationTo install TypeScript globally:npm install -g typescriptCompilationTo compile a TypeScript file to JavaScript:tsc file.tsTo watch a file or files and recompile when changes are made:tsc --watch file.tsTo watch multiple files:tsc --watch *.tsConfigurationCreate a tsconfig.json to configure TypeScript options:{ \"compilerOptions\": { \"target\": \"es6\", \"watch\": true, \"lib\": [\"dom\", \"es2017\", \"ESNext\"], \"allowJs\": true, \"strict\": true }}Basic Syntax and Data TypesTypeScript’s syntax is a superset of JavaScript. This means all valid JavaScript code is also valid TypeScript.console.log('Hello, TypeScript!');Data TypesTypeScript enhances JavaScript by adding data types:let message: string = 'Hello World';let count: number = 42;let isActive: boolean = true;Arrays and TuplesArrays:let numbers: number[] = [1, 2, 3];Tuples:let tuple: [string, number] = ['hello', 10];EnumsEnums allow you to define a set of named constants:enum Color { Red, Green, Blue}let c: Color = Color.Green;Any, Unknown, and Never any: Disables all further type checking. unknown: Ensures type checking is performed. never: Indicates functions that never return.Query SelectorsTypeScript can infer DOM element types:const body: HTMLBodyElement = document.querySelector('body')!;FunctionsTypeScript enables specifying types for function parameters and return values:function add(a: number, b: number): number { return a + b;}function log(message: string): void { console.log(message);}InterfacesInterfaces define the shape of objects:interface User { name: string; id: number;}const user: User = { name: \"Jane Doe\", id: 1,};ClassesTypeScript supports modern JavaScript classes with a richer syntax:class Greeter { greeting: string; constructor(message: string) { this.greeting = message; } greet() { return \"Hello, \" + this.greeting; }}Advanced TypeScriptGenericsGenerics allow you to define reusable and type-safe functions, classes, and interfaces:function identity&lt;T&gt;(arg: T): T { return arg;}DecoratorsDecorators provide a way to add both annotations and a meta-programming syntax for class declarations and members.function sealed(constructor: Function) { Object.seal(constructor); Object.seal(constructor.prototype);}ModulesTypeScript supports ES6 modules:import { moduleFunction } from './module';Tips and Tricks Type Assertions: Use type assertions when you know more about the type of a value than TypeScript does. Type Inference: TypeScript infers types where possible, reducing the need to explicitly define types. Strict Null Checking: Enable strict null checks to catch null and undefined errors.Additional Resources TypeScript Official Documentation TypeScript GitHub RepositoryThis TypeScript cheatsheet provides a quick reference to essential TypeScript syntax and features, ideal for both beginners and experienced developers transitioning from JavaScript. TypeScript’s static typing adds a layer of reliability and robustness to JavaScript code, making it an increasingly popular choice for web development projects." }, { "title": "SASS", "url": "/posts/sass/", "categories": "sass, css, documentation, webserver, webdev", "tags": "scss, sass, css, documentation, webserver, webdev, frontend", "date": "2022-09-20 00:00:00 +0200", "snippet": "SASS or SCSS is a CSS preprocessor. It allows you to use variables, functions, and other features that don’t exist in plain CSS.To install SASS, run:npm install -g sassTo compile a .scss file to .css, run:sass file.scss file.cssIf you want to compile a .scss file to .css and watch for changes, run:sass --watch file.scss file.css Essentialy valid CSS is valid SCSSVariables$color: #000;body { background-color: $color;}" }, { "title": "Nix", "url": "/posts/nix/", "categories": "tutorial, install, packagemanager", "tags": "linux, macOS, tutorial, install, packagemanager, amd64, arm64, nix", "date": "2022-09-19 00:00:00 +0200", "snippet": "Nix is a package manager for Linux. It is similar to apt, yum, and other package managers.pros packages are up to date very fastcons unintuitive command names no full arm64 support (yet)Installationcurl -L https://nixos.org/nix/install | sh. ./home/$USER/.nix-profile/etc/profile.d/nix.shecho \"export NIXPKGS_ALLOW_UNFREE=1\" &gt;&gt; ~/.zshrcexport NIXPKGS_ALLOW_UNFREE=1search nix packages list installed packages nix-env -q install packages nix-env -iA nixpkgs.packagename erase packages nix-env -e packagename update all packages nix-env -u" }, { "title": "Jekyll", "url": "/posts/jekyll/", "categories": "tutorial, install, webdev", "tags": "linux, macOS, tutorial, install, webdev", "date": "2022-09-19 00:00:00 +0200", "snippet": "Jekyll is a static site generator. It can be used to create a website without a database.macOS installation (arm64)xcode-select --installbrew install rbenv ruby-buildrbenv install 3.1.2rbenv global 3.1.2ruby -vrbenv rehashecho 'eval \"$(rbenv init - zsh)\"' &gt;&gt; ~/.zshrcsource ~/.zshrcgem install jekyll bundlerecho 'export PATH=\"/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/3.1.2/bin:$PATH\"' &gt;&gt; ~/.zshrcsource ~/.zshrcYou may need to run a rebuild inside the project directory:bundle update --bundlerbundle add webrickbundle install --redownloadIf you use a github build action, you need to addbundle lock --add-platform x86_64-linuxLinux depemdenicesArchsudo pacman -Syu --noconfirmsudo pacman -S ruby base-devel --noconfirmDebiansudo apt uptate -y &amp;&amp; sudo apt upgrade -ysudo apt install -y ruby-full build-essentialFedorasudo dnf update -y &amp;&amp; sudo dnf upgrade -ysudo dnf install ruby ruby-devel openssl-devel redhat-rpm-config @development-tools -yLinux installationecho '# Install Ruby Gems to ~/gems' &gt;&gt; ~/.zshrcecho 'export GEM_HOME=\"$HOME/gems\"' &gt;&gt; ~/.zshrcecho 'export PATH=\"$HOME/gems/bin:$PATH\"' &gt;&gt; ~/.zshrcsource ~/.zshrcgem install jekyll bundlerUsagecreate a new site and run it on localhost:4000jekyll new my-awesome-sitecd my-awesome-sitebundle exec jekyll serve" }, { "title": "Python", "url": "/posts/python/", "categories": "python, documentation", "tags": "python, documentation, automation, backend", "date": "2022-09-18 00:00:00 +0200", "snippet": "print('Hello, World!')’ ‘ can be used instead of “ “Datatypesx = 'Hello World' #strx = 20 #intx = 20.5 #floatx = 1j #complexx = ['apple', 'banana', 'cherry'] #listx = ('apple', 'banana', 'cherry') #tuplex = range(6) #rangex = {'name': 'John', 'age': 36} #dictx = {'apple', 'banana', 'cherry'} #setx = frozenset({'apple', 'banana', 'cherry'}) #rozensetx = True #boolx = b'Hello' #bytesx = bytearray(5) #bytearrayx = memoryview(bytes(5)) #memoryviewOperatorsArithmetic Operator Name Example + Addition x + y - Subtraction x - y * Multiplication x * y / Division x / y % Modulus x % y ** Exponentiation x**y // Floor division x//y Assignment Operator Example Same As = x = 5 x + y += x += 5 x = x + 5 -= x -= 5 x = x - 5 *= x *= 5 x = x * 5 /= x /= 5 x = x / 5 %= x %= 5 x = x % 5 **= x **= 5 x = x ** 5 //= x //= 5 x = x // 5 Comparison Operator Name Example == equal to x == y != not equal to x != y &gt; greater than x &gt; y &lt; less than x &lt; y &gt;= greater than or equal to x &gt;= y &lt;= less than or equal to x &lt;= y Logical Operator Name Description Example and AND returns true if both statements are true x &lt; 5 and x &lt; 10 or OR returns true if one of the statements is true x &lt; 5 or x &lt; 4 not NOT reverse the result, returns false if the result is true not(x &lt; 5 and x &lt; 10) Bitwise Operator Name Description Example &amp; AND Sets each bit to 1 if both bits are 1 x &amp; y | OR Sets each bit to 1 if one of two bits is 1 x \\| y ^ XOR Sets each bit to 1 if only one of two bits is 1 x ^ y ~ NOT Inverts all the bits ~x « Zero fill left shift Shift left by pushing zeros in from the right and let the leftmost bits fall off x &lt;&lt; 2 » Signed right shift Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off x &gt;&gt; 2 In and Outputusername = input('Enter username:') #write user input as string in variableprint(f'my name is {username}')Castingchange the data type of a variablestr(3.0) #convert to stringint(2.8) #convert to intfloat('3') #convert to floatint(False) # 0int(True) # 1print(type(0)) # &lt;class 'int'&gt;String Operationsa = 'Hello, World!'list('hello') #returns ['h', 'e', 'l', 'l', 'o']a[1] #returns the second letter (e)a[:5] #removes everything after the first 5 letters (Hello)a[1:] #removes the first letter (ello, World!)a[2:5] #removes the first 2 letters and the last 5 letters (llo)a.upper() #sets all letters as upper casea.lower() #sets all letters as lower casea.strip() #removes all whitespacesa.replace('H', 'J') #replase a lettera.split(',') # returns ['Hello', ' World!']a.index('H') #returns the index of a character in a stringa.__contains__('llo') #returns trueexec(\"print('Hello')\") #runs string as python codeeval(\"2+2\") #runs string as python expresion eval() is used to evaluate a string as a python expression, while exec() is used to evaluate a string as a python statement.They are usefull to convert a string e.g. a function name stored in a config file to a python function name.Listscan contain different data typesArrayli = [69, 'banana', True]print(li)li[0] #returns the first elementli[-1] # short for: li[len(li)-1] (last element)len(li) #returns the lengthli.insert(2, 'watermelon') #insert an item at index 2li.append('orange') #append an item at the endli.remove('banana') #remove an itemli.pop(1) #remove item at index 1thislist = li.copy() #copy a listtropical = ['mango', 'pineapple', 'papaya']li.extend(tropical) #add one list to anouterli.sort() #sort the actual list (returns None)li.sort(reverse=True) #sort the list descendingli.reverse() #reverse the list ordertropical.index('mango') #returns the index to a valuelist.clear() #clear the list contentdel li #delete the entire listlist1 = ['a', 'b', 'c']list2 = [1, 2, 3]list3 = list1 + list2 #join two listprint(list3)# ['a', 'b', 'c', 1, 2, 3]Tuplea tuple is a final arrayeggs = ('hello', 42, 0.5)multiple assignment trickcat = ['fat', 'gray', 'loud']size, color, disposition = catshort for…size = cat[0]color = cat[1]disposition = cat[2]Comprehensionarr = [i for i in range(10) if i % 2 == 0]# [0, 2, 4, 6, 8]short for…arr = []for i in range(10): if i % 2 == 0: arr.append(i)fruits = ['apple', 'banana', 'cherry', 'kiwi', 'mango']newlist = [fruit for fruit in fruits if 'a' in fruit]# ['apple', 'banana', 'mango']short for…newlist = []for fruit in fruits: if 'a' in fruit: newlist.append(fruit)i gets added to the array while condition == TrueDictionariesthisdict = {'brand': 'Ford', 'model': 'Mustang', 'year': 1964}print(thisdict)thisdict.get('model') #returns the value of the 'model' keylist(thisdict.keys()) #returns a list of the keyslist(thisdict.values()) #returns a list of all valuesthisdict['year'] = 2018 #change a valuethisdict.update({'year': 2020}) #changa/add key:value pairthisdict.pop('model') #remove an itemmydict = thisdict.copy() #copy the dictionarydict(sorted(dic.items(), key=lambda item: item[1])) #sort dictionaryFlow Controlif else statementa = 200b = 33if b &gt; a: print('b is greater than a')elif a == b: print('a and b are equal')else: print('a is greater than b') in can often be used instead of __contains__() but omly returns True if the list contains the full strings,while the function returns `True’ even if only a partial string is in the list.fruits = ['apples', 'oranges', 'bananas']if 'apples' in fruits: print('apples are in the list')while loopi = 0while i &lt; 6: i += 1 if i == 3: continue #restart the loop print(i) #break to quit the loopfor loopfor eachfruits = ['apple', 'banana', 'cherry']for item in fruits: print(item)for i in range(5): #execute 5 times print(fruits)match /switch case statementonly supported in python &gt;= 3.10n = 0match n: case 0: print('printed if n = 0') case 1: print('printed if n = 1') case _: print('printed if none above apply')It works with the following arguments: (int, float, str, bytes, tuple, list, set, frozenset, dict, range, slice, type)Functionsdef my_function(fname, lname): return f'{fname} {lname}'my_function('Emil', 'Refsnes')iterable = [1, 2, 3]map(my_function, iterable) #executes a specified function for each item in an iterablex = lambda a: a + 10 #lambda/anonymous functionprint(x(5))var1 = my_function(fname, lname) #run func and store return valuevar2 = my_function #set 'alias' for function 'my_function'print(var(saracen,rhue))Classespublic: standart /items are globaly availibleprivate: 2 underscores at the beginning /items only availible in the current classprotected: 1 underscore at the beginning /items only availible in the current class and subclassesclass Person: def __init__(self, name, age): #constructor //destructor: __del__ self.name = name self.age = age def myfunc(self): print('Hello my name is ' + self.name)class Student(Person): #Student is a chld class of person pass #Student inherits the constructor and all methods from personp1 = Person('John', 36) #create objectprint(p1.name)print(p1.age)p1.myfunc() #call methodExceptionstry: print(x)except NameError: print('Variable x is not defined')except: print('Something else went wrong')finally: print('The \"try except\" is finished')File handlingr open file in read mode r+ Opens a file for both reading and writing w write content/overwrite existing content w+ Opens a file for both writing and reading. Overwrites the existing file if the file exists. If the file does not exist, it creates a new file for reading and writingwith open('text.txt', 'w') as f: #open file in write mode and store in f f.write('Woops! I have deleted the content!') #write content/overwrite existing contentwith open('text.txt', 'r') as f: #open file in read mode and store in f f.read() #returns file content as stringFile operationsimport shutilshutil.copy('exp.py', 'Kap04/exp.py')shutil.move('exp.py', 'Kap04/exp.py')sys moduleThe sys.argv variable is a list in Python, which contains the command-line arguments passed to the script. The first item in this list is the name of the script. The list contains the rest of the arguments passed to the script.import sysarguments = sys.argv #returns a list of argumentsarguments.pop(0) #remove the first argument (the script name)os moduleimport osos.listdir('./') #list all files in the current directoryos.system('ls') #run a shell commandos.remove('exp.py') #delete fileos.rmdir('myfolder') #delete folderos.mkdir('myfolder') #create folderos.getcwd() #get current working directoryos.chdir('myfolder') #change directoryos.path.exists('myfile.txt') #check if file exists Since you can run shell commands with os.system(), you can also run bash, nodejs or other python scripts with it.Keep in mind that every time you use this function, you are using a new shell, so if you have to run multiple commands with the same shell connect them with ` &amp;&amp; `Zip Moduleimport zipfile as zffrom os import system as cmdzip a filedef zip(file): zf.ZipFile(file + '.zip', 'w').write(file) cmd('rm -rf ' + file)unzip a filedef unzip(file): zf.ZipFile(file).extractall() cmd('rm -fr ' + file)backup a folder to a zip filedef backup(folder): zf.ZipFile(folder+'.zip', 'w').write(folder)JSON Moduleimport jsonSave data to filedic = {'name': 'John', 'age': 30, 'city': 'New York'}with open('data.json', 'w') as f: json.dump(dic, f) #write to fileGet data from filewith open('data.json', 'r') as f: data = json.load(f) #read from fileExel Moduleimport openpyxlimport mathwb = openpyxl.Workbook()sheet = wb.activesheet.title = 'myTable' #select and name tatablex, y = 1, 1for i in range(-31, 31): sheet.cell(row=y, column=x).value = math.sin(i / 10) #write into field y += 1wb.save('table.xlsx') #safe file" }, { "title": "pyenv", "url": "/posts/pyenv/", "categories": "python, install, tutorial", "tags": "python, tutorial, pyenv, macOS, linux, install", "date": "2022-09-18 00:00:00 +0200", "snippet": "pyenv is a tool to manage multiple versions of Python. It is similar to rbenv, nvm, and other language version managers.This is especially for macOS since it comes with Python 2.7 pre-installed.InstallationInstall pyenv with homebrew and add the initializer to your shell profile and reload it.brew install pyenvecho 'eval \"$(pyenv init --path)\"' &gt;&gt; ~/.zshrcsource ~/.zshrcUsagecheck available versionspyenv versionsinstall a version of Pythonpyenv install 3.10.6set the global version of PythonThis will then be your default Python environment.pyenv global 3.10.6set the local version of PythonThis will then be your default Python environment for the current directory.pyenv local 3.10.6set the shell version of PythonSet then Python environment for the current shell.pyenv shell 3.10.6" }, { "title": "Kotlin", "url": "/posts/kotlin/", "categories": "kotlin, documentation", "tags": "kotlin, documentation", "date": "2022-09-18 00:00:00 +0200", "snippet": "fun main() { println(\"Hello, World!\")}Datatypesvar number = 5val constant = 5 //val is final//it's possible to specify a typeval myNum: Int = 5 // Intval myDoubleNum: Double = 5.99 // Doubleval myLetter: Char = 'D' // Charval myBoolean: Boolean = true // Booleanval myText: String = \"Hello\" // StringOperatorsArithmetic Operator Name Example + Addition x + y - Subtraction x - y * Multiplication x * y / Division x / y % Modulus x % y ++ Increment i++ – Decrement i-- Assignment Operator Example Same As = x = 5 x + y += x += 5 x = x + 5 -= x -= 5 x = x - 5 *= x *= 5 x = x * 5 /= x /= 5 x = x / 5 %= x %= 5 x = x % 5 Comparison Operator Name Example == equal to x == y != not equal to x != y &gt; greater than x &gt; y &lt; less than x &lt; y &gt;= greater than or equal to x &gt;= y &lt;= less than or equal to x &lt;= y Logical Operator Name Description Example &amp;&amp; AND returns true if both statements are true x &lt; 5 &amp;&amp; x &lt; 10 || OR returns true if one of the statements is true x &lt; 5 || x &lt; 4 ! NOT reverse the result, returns false if the result is true !(x &lt; 5 &amp;&amp; x &lt; 10) " }, { "title": "JavaScript", "url": "/posts/js/", "categories": "js, documentation, webserver, webdev", "tags": "js, documentation, webserver, webdev, frontend", "date": "2022-09-18 00:00:00 +0200", "snippet": "console.log(\"Hello World!\");’ ‘ can be used instead of “ “ and ; is optionalDatatypesvar myNum = 5; //global variablelet myString = \"Hello\"; //local variableconst myBool = true; //local constantvar myNumbrs[] = {1,2,3}; //arrayvar dict = {name:\"John\", age:30, city:\"New York\"}; //dictionaryOperatorsArithmetic Operator Name Example + Addition x + y - Subtraction x - y * Multiplication x * y ** Exponentiation x ** y / Division x / y % Modulus x % y ++ Increment i++ – Decrement i-- Assignment Operator Example Same As = x = 5 x + y += x += 5 x = x + 5 -= x -= 5 x = x - 5 *= x *= 5 x = x * 5 **= x **= 5 x = x ** 5 /= x /= 5 x = x / 5 %= x %= 5 x = x % 5 Comparison Operator Name Example == equal to (same value) x == y === equal to (same value and type) x === y != not equal to x != y &gt; greater than x &gt; y &lt; less than x &lt; y &gt;= greater than or equal to x &gt;= y &lt;= less than or equal to x &lt;= y Logical Operator Name Description Example &amp;&amp; AND returns true if both statements are true x &lt; 5 &amp;&amp; x &lt; 10 || OR returns true if one of the statements is true x &lt; 5 || x &lt; 4 ! NOT reverse the result, returns false if the result is true !(x &lt; 5 &amp;&amp; x &lt; 10) Castingchange the data type of a variablevar x = 3var x_as_string = String(x)var x_as_int = Number(x_as_string)String Operationsvar a = \"Hello, World!\"var b = 420a += b //Hello, World!420a.length //16a.slice(0, 5) //returns the first 5 letters (Hello)a.charAt(1) //returns the second letter (e)a.toUpperCase() //sets all letters as upper casea.toLowerCase() //sets all letters as lower casea.trim() //removes all whitespacesa.replace(\"H\", \"J\") //replase a letterArrayscan contain different data typesvar cars = [\"Saab\", \"Volvo\", \"BMW\"];cars[0] = \"Opel\"; //change valuecars.push(\"Audi\"); //add valuecars.pop(); //remove last valuecars.shift(); //remove first valuecars.length; //returns the lengthcars.sort((a, b) =&gt; a - b); //sorts the arrayIf you just use the sort() function, the array will be sorted alphabetically.Flow Controlif else statementif (time &lt; 10) { greeting = \"Good morning\";} else if (time &lt; 20) { greeting = \"Good day\";} else { greeting = \"Good evening\";}switch statementworks with int and charlet x = \"0\";switch (x) { case 0: text = \"Off\"; break; case 1: text = \"On\"; break; default: text = \"No value found\";}if there is no ‘break’ the next case will be executed toofor loopfor (var i = 0; i &lt; 5; i++) { console.log(\"helloworld\"); //prints helloworld 5 times}loop through arrayfor (var i = 0; i &lt; cars.length; i++) { console.log(cars[i]);}forEachcars.forEach((item, index, array) =&gt; { console.log(item, index);})functionsfunction myFunction(a, b) { return a * b; // Function returns the product of a and b}let x = myFunction(4, 3); // Function is called, return value will end up in xarrow functionvar hello = () =&gt; { return \"Hello World!\";}Query selectorsselect DOM elementsselects the first element with the tag bodyvar body = document.querySelector('body');selects the element with the id buttonvar button = document.querySelector('#button');selects all elements with the class someclass and returns an arrayvar classElements = document.querySelectorAll('.someclass');Create elementsvar newElement = document.createElement('div'); //creates a new div elementvar text = document.createTextNode('Hello World!'); //creates a text nodenewElement.appendChild(text); //adds the text node to the div elementdocument.querySelector('body').appendChild(newElewment); //adds the div element to the bodyinner HTMLvar div = document.querySelectorAll('div')[0];div.innerHTML = '&lt;p&gt;some text&lt;/p&gt;'; //replaces the content of the div with a paragraphHTML attributeschange HTML attributes(attribute names are written in camelCase)var img = document.querySelectorAll('img')[0]; //selects the first imagebody.class += 'someclass'; //adds the class someclass to existing classesimg.src = 'path/to/image.jpg';img.alt = '#';var a = document.querySelectorAll('a')[0];a.href = 'https://github.com/SaracenRhue';CSS attributeschange CSS attributes(attribute names are written in camelCase)var body = document.querySelector('body');body.style.backgroundColor = 'red';JSON fetchget data from a JSON filejson files are formatted lika a dictionary {}or multiple dictionaries in an array [{},{}]fetch(\"./src/data.json\").then((response) =&gt; { return response.json(); }).then((json) =&gt; { json.forEach((object) =&gt; { console.log(object.name); }); });" }, { "title": "Java", "url": "/posts/java/", "categories": "java, documentation", "tags": "java, documentation", "date": "2022-09-18 00:00:00 +0200", "snippet": "Java CheatsheetIntroductionJava is a widely-used, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.Basic SyntaxHello World Programpublic class Main { public static void main(String[] args) { System.out.println(\"Hello World\"); }}Data TypesPrimitive Data Typesint myNum = 5; // 32-bit Integerfloat myFloatNum = 5.99f; // 32-bit Floating Pointdouble myDoubleNum = 9.98; // 64-bit Floating Pointchar myLetter = 'D'; // Single 16-bit Unicode Characterboolean myBool = true; // Boolean (true or false)byte myByte = 100; // 8-bit Signed Integershort myShort = 5000; // 16-bit Signed Integerlong myLong = 15000000000L; // 64-bit Signed IntegerNon-Primitive Data Types (Reference Types)String myText = \"Hello\"; // Stringint[] myNumArray = {10, 20, 30}; // Array// Classpublic class Main { int x = 5;}Type CastingWidening Casting (automatically)int myInt = 9;double myDouble = myInt; // Automatic casting: int to doubleNarrowing Casting (manually)double myDouble = 9.78;int myInt = (int) myDouble; // Manual casting: double to intOperatorsArithmetic Operatorsint sum = a + b; // Additionint diff = a - b; // Subtractionint prod = a * b; // Multiplicationint quot = a / b; // Divisionint mod = a % b; // ModulusAssignment Operatorsa += 5; // a = a + 5a -= 5; // a = a - 5a *= 5; // a = a * 5a /= 5; // a = a / 5a %= 5; // a = a % 5Comparison Operatorsboolean result;result = a == b; // Equal toresult = a != b; // Not equalresult = a &gt; b; // Greater thanresult = a &lt; b; // Less thanresult = a &gt;= b; // Greater than or equal toresult = a &lt;= b; // Less than or equal toLogical Operatorsboolean result;result = a &amp;&amp; b; // Logical andresult = a || b; // Logical orresult = !a; // Logical notBitwise Operatorsint result;result = a &amp; b; // ANDresult = a | b; // ORresult = a ^ b; // XORresult = ~a; // NOTresult = a &lt;&lt; 2; // Left Shiftresult = a &gt;&gt; 2; // Right ShiftStringsBasic String OperationsString txt = \"Hello World\";int length = txt.length(); // String LengthString txtUpper = txt.toUpperCase(); // Convert to Upper CaseString txtLower = txt.toLowerCase(); // Convert to Lower Caseint pos = txt.indexOf(\"Hello\"); // Find position of substringConcatenationString firstName = \"John\";String lastName = \"Doe\";String fullName = firstName + \" \" + lastName; // ConcatenationEscape CharactersString txt = \"We are the so-called \\\"Vikings\\\" from the north.\";String path = \"C:\\\\Users\\\\User\";Arraysimport java.util.ArraysDeclaring and Using Arraysint[] myNum = {10, 20, 30, 40}; // Declare and Initializeint myNumLength = myNum.length; // Get Array Lengthfor (int i : myNum) { // Enhanced for loop System.out.println(i);}Multidimensional Arraysint[][] myNumbers = { {1, 2, 3, 4}, {5, 6, 7} };for (int i = 0; i &lt; myNumbers.length; ++i) { for(int j = 0; j &lt; myNumbers[i].length; ++j) { System.out.println(myNumbers[i][j]); }}Control Flow StatementsIf-Elseif (condition) { // Code if condition is true} else if (anotherCondition) { // Code if anotherCondition is true} else { // Code if all conditions are false}Switchswitch(expression) { case x: // Code block break; case y: // Code block break; default: // Code block break;}While Loopwhile (condition) { // Code block to be executed}For Loopfor (int i = 0; i &lt; 5; i++) { // Code block to be executed}For-Each Loop (Enhanced For Loop)for (String i : cars) { System.out.println(i);}Methods (Functions)Defining and Calling a Methodpublic static void myMethod() { // Code to be executed}public static void main(String[] args) { myMethod(); // Call the method}Method with Parameterspublic static void myMethod(String fname) { System.out.println(fname + \" Doe\");}public static void main(String[] args) { myMethod(\"John\");}Method Overloadingpublic static int plusMethod(int x, int y) { return x + y;}public static double plusMethod(double x, double y) { return x + y;}Object-Oriented ProgrammingClass and Objectspublic class Main { int x = 5; public static void main(String[] args) { Main myObj = new Main(); // Create an object System.out.println(myObj.x); // Access attribute }}Constructorspublic class Car { public Car() { // Constructor // Initialize object }}Inheritanceclass Vehicle { // Base class}class Car extends Vehicle { // Derived class}Polymorphismclass Animal { public void animalSound() { System.out.println(\"The animal makes a sound\"); }}class Pig extends Animal { public void animalSound() { System.out.println(\"The pig says: wee wee\"); }}Encapsulationpublic class Person { private String name; // Private attribute // Getter public String getName() { return name; } // Setter public void setName(String newName) { this.name = newName; }}AbstractionA abstract class is a class that is only used as super class. It can’t generate it’s own Objects.abstract class Animal { public abstract void animalSound(); public void sleep() { System.out.println(\"Zzz\"); }}class Pig extends Animal { public void animalSound() { System.out.println(\"The pig says: wee wee\"); }}RecordsA record is a data type that contains a set of fields, just like a class with usefull default methods. However, a record is immutable, which means that once a record is created, its fields cannot be changed.Declaring a Recordpublic record Point(int x, int y) { }In this example, Point is a record with two fields, x and y. The record automatically gets several methods: An all-arguments constructor:public Point(int x, int y) { this.x = x; this.y = y;} equals and hashCode methods:public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Point)) return false; Point point = (Point) o; return x == point.x &amp;&amp; y == point.y;}public int hashCode() { return Objects.hash(x, y);} A toString method:public String toString() { return \"Point{x=\" + x + \", y=\" + y + \"}\";} Accessor methods for the fields:public int x() { return x;}public int y() { return y;}Using a RecordPoint point = new Point(5, 10);System.out.println(point.x()); // prints 5System.out.println(point.y()); // prints 10In this example, we create a new Point record and access its fields using the automatically generated accessor methods.You can also add methods to a record:public record Point(int x, int y) { public int sum() { return x + y; }}Point point = new Point(5, 10);System.out.println(point.sum()); // prints 15In this example, we add a sum method to the Point record that returns the sum of x and y.InterfacesA Interface is a blueprint for a class. It defines the methods that a class must implement.interface Animal { public void animalSound(); // interface method (does not have a body) public void sleep(); // interface method (does not have a body)}// Pig \"implements\" the Animal interfaceclass Pig implements Animal { public void animalSound() { // The body of animalSound() is provided here System.out.println(\"The pig says: wee wee\"); } public void sleep() { // The body of sleep() is provided here System.out.println(\"Zzz\"); }}class Main { public static void main(String[] args) { Pig myPig = new Pig(); // Create a Pig object myPig.animalSound(); myPig.sleep(); }}Exception HandlingTry-Catchtry { // Code that may produce an exception} catch (ExceptionType name) { // Code to handle the exception} finally { // Code to be executed after try and catch}Throwing Exceptionspublic static void checkAge(int age) throws ArithmeticException { if (age &lt; 18) { throw new ArithmeticException(\"Access denied - You must be at least 18 years old.\"); } else { System.out.println(\"Access granted - You are old enough!\"); }}Custom Exceptionspublic class MyException extends Exception { public MyException(String message) { super(message); }}EnumsEnums are a special data type that enable for a variable to be a set of predefined constants. The variable must be equal to one of the values that have been predefined for it.public enum Color { RED, GREEN, BLUE}In this example, Color is the enum and RED, GREEN, and BLUE are its predefined constants. This means that a variable of type Color can only be either RED, GREEN, or BLUE.You can use an enum in a switch statement:Color myColor = Color.RED;switch(myColor) { case RED: System.out.println(\"Color is Red\"); break; case GREEN: System.out.println(\"Color is Green\"); break; case BLUE: System.out.println(\"Color is Blue\"); break;}You can also use enums in loops and collections:for (Color color : Color.values()) { System.out.println(color);}This will print:REDGREENBLUECollectionsArrayListThe ArrayList class is a resizable array, which can be found in the java.util package.The difference between a built-in array and an ArrayList in Java, is that the size of an array cannot be modified (if you want to add or remove elements to/from an array, you have to create a new one). While elements can be added and removed from an ArrayList whenever you want. The syntax is also slightly different:import java.util.ArrayList;public class Main { public static void main(String[] args) { ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;(); cars.add(\"Volvo\"); cars.get(0); // returns \"Volvo\" cars.set(0, \"BMW\"); // sets the element at index 0 to \"BMW\" cars.remove(0); // removes the element at index 0 cars.size(); // returns the number of elements in the ArrayList cars.clear(); // removes all elements from the ArrayList System.out.println(cars); // lambda expression cars.forEach((n) -&gt; { System.out.println(n); }); }}LinkedListimport java.util.LinkedList;public class Main { public static void main(String[] args) { LinkedList&lt;String&gt; cars = new LinkedList&lt;String&gt;(); cars.add(\"Volvo\"); cars.addFirst(\"BMW\"); cars.addLast(\"Ford\"); cars.removeFirst(); cars.removeLast(); cars.getFirst(); cars.getLast(); System.out.println(cars); }}You can also use all ArrayList methods.Mapimport java.util.HashMap;import java.util.Set;public class Main {public static void main(String[] args) {HashMap&lt;String, String&gt; capitalCities = new HashMap&lt;String, String&gt;();capitalCities.put(\"England\", \"London\");capitalCities.get(\"England\");capitalCities.remove(\"England\");capitalCities.clear();capitalCities.size();System.out.println(capitalCities);// Print keysfor (String i : capitalCities.keySet()) {System.out.println(i);Set&lt;String&gt; keys = capitalCities.keySet();Set&lt;String&gt; values = (Set&lt;String&gt;) capitalCities.values();\t\t}\t}}IOScannerimport java.util.Scanner;public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); String name = sc.nextLine(); int age = sc.nextInt() sc.close(); }}Reading from a Filetry { File myObj = new File(\"filename.txt\"); Scanner myReader = new Scanner(myObj); while (myReader.hasNextLine()) { String data = myReader.nextLine(); System.out.println(data); } myReader.close();} catch (FileNotFoundException e) { System.out.println(\"An error occurred.\"); e.printStackTrace();}Writing to a Filetry { FileWriter myWriter = new FileWriter(\"filename.txt\"); myWriter.write(\"Files in Java might be tricky, but it is fun enough!\"); myWriter.close(); System.out.println(\"Successfully wrote to the file.\");} catch (IOException e) { System.out.println(\"An error occurred.\"); e.printStackTrace();}StackA Stack is a Last-In-First-Out (LIFO) data structure. In Java, Stack is a class that extends Vector and implements the Collection interface.import java.util.Stack;public class Main { public static void main(String[] args) { Stack&lt;String&gt; stack = new Stack&lt;String&gt;(); // Adding elements (push) stack.push(\"First\"); stack.push(\"Second\"); stack.push(\"Third\"); // Peek at top element without removing it System.out.println(stack.peek()); // Output: Third // Remove and return top element (pop) String top = stack.pop(); // removes \"Third\" // Check if stack is empty boolean isEmpty = stack.empty(); // Search for element (returns 1-based position from top) int position = stack.search(\"First\"); // Iterate through stack for(String element : stack) { System.out.println(element); } }}Common Stack methods: push(E item): Adds an element to the top pop(): Removes and returns the top element peek(): Returns the top element without removing it empty(): Returns true if stack is empty search(Object o): Returns position of an object size(): Returns number of elements in stack" }, { "title": "Homebrew", "url": "/posts/homebrew/", "categories": "tutorial, install, packagemanager", "tags": "linux, macOS, homebrew, tutorial, install, packagemanager, arm64, amd64", "date": "2022-09-18 00:00:00 +0200", "snippet": "Homebrew is a package manager for macOS. It is similar to apt, yum, and other package managers.It can be used on Debian or Fedora Linux as well.pros packages are up to date easy to use intuitive package names does not require sudo arm64 supportcons slowDependenciesDebiansudo apt install -y build-essential procps curl file gitFedorasudo yum groupinstall 'Development Tools'sudo yum install procps-ng curl file gitsudo yum install libxcrypt-compatInstallationRun the install script and add the initializer to your shell profile and reload it. (The yes '' | is to automate the installation without the need to press enter)yes '' | /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' &gt;&gt; ~/.zshrcsource ~/.zshrcUsagecheck available packagesbrew search &lt;package&gt;install a packagebrew install &lt;package&gt;update packagesbrew update &amp;&amp; brew upgradeuninstall a packagebrew uninstall &lt;package&gt;install programs with caskWith cask you can install VS Code, Firefox, and other programs.```bashbrew install --cask &lt;package&gt;uninstall a program with caskbrew uninstall --cask &lt;package&gt;search cask formulares" }, { "title": "Go", "url": "/posts/go/", "categories": "Go, golang, documentation", "tags": "Go, golang, documentation, webdev, backend", "date": "2022-09-18 00:00:00 +0200", "snippet": "go mod init projectnamepackage mainimport (\"fmt\")func main() { fmt.Println(\"Hello World!\")} run the go filego run filename.goIf your code is organized into multiple files, you can run the go file with the following command:go run *.gomake a executable filego build filename.gorun the executable file./filenameVariablesvar student1 string = \"John\" //type is stringvar student2 = \"Jane\" //type is inferredx := 2 //type is inferredconst PI = 3.14 //constantconst A int = 1 //constantDeclaring multiple variablesvar a, b, c, d int = 1, 3, 5, 7var a, b = 6, \"Hello\"c, d := 7, \"World!\"OperatorsArithmetic Operator Name Example + Addition x + y - Subtraction x - y * Multiplication x * y / Division x / y % Modulus x % y ++ Increment i++ – Decrement i-- Assignment Operator Example Same As = x = 5 x + y += x += 5 x = x + 5 -= x -= 5 x = x - 5 *= x *= 5 x = x * 5 /= x /= 5 x = x / 5 %= x %= 5 x = x % 5 Comparison Operator Name Example == equal to x == y != not equal to x != y &gt; greater than x &gt; y &lt; less than x &lt; y &gt;= greater than or equal to x &gt;= y &lt;= less than or equal to x &lt;= y Logical Operator Name Description Example &amp;&amp; AND returns true if both statements are true x &lt; 5 &amp;&amp; x &lt; 10 || OR returns true if one of the statements is true x &lt; 5 || x &lt; 4 ! NOT reverse the result, returns false if the result is true !(x &lt; 5 &amp;&amp; x &lt; 10) ListsArraysThe size of an array is fixedvar arr1 = [3]int{1,2,3}arr2 := [5]int{4,5,6,7,8}var arr3 = [...]int{1,2,3} //length is inferredarr1[0] = 10 //change value at index 0fmt.Println(arr1) //output: [10 2 3]len(arr1)) //length of array (3)SlicesThe size of a slice is dynamicvar myslice1 = []int{}var slice2 = []int{1,2,3}" }, { "title": "Docker", "url": "/posts/docker/", "categories": "linux, docker, containers", "tags": "linux, documentation, arm64, amd64, webserver", "date": "2022-09-18 00:00:00 +0200", "snippet": "Installationcurl -fsSL https://get.docker.com | shVirtual Machines vs. Containers: A Brief OverviewVirtual Machines (VMs) and containers are both virtualization technologies used for creating isolated environments for running applications, but they differ significantly in their approach and resource efficiency. Virtual Machines (VMs): VMs operate by emulating entire hardware systems, allowing you to run multiple operating systems on a single physical machine. Each VM includes a full copy of an operating system, the application, necessary binaries, and libraries - taking up tens of GBs. VMs are managed by a hypervisor and are great for full isolation and running multiple different operating systems on the same hardware. Containers: Containers, on the other hand, share the same operating system kernel and isolate the application processes from the rest of the system. They’re incredibly lightweight (only megabytes in size), start almost instantly, and use a fraction of the memory compared to booting an entire OS. Introduction to DockerfilesWith a clear understanding of how containers differ from traditional VMs, let’s delve into Dockerfiles. A Dockerfile is a text document containing all the commands a user could call on the command line to assemble an image. Using docker build, users can create an automated build that executes several command-line instructions in succession. This guide will explore the basic structure and key elements of a Dockerfile, illustrating how to efficiently containerize your applications.Basic Structure of a DockerfileThe Dockerfile is the starting point for creating a Docker image. It’s a simple text file with instructions on how to build your Docker image. Here’s a basic example:FROM node:current-alpine3.16WORKDIR /appCOPY . .RUN npm installENV PORT=3000EXPOSE 3000VOLUME /app/publicCMD [\"npm\", \"start\"]FROM defines the image, your image will be based on. In this case it’s the Alpine version of the node Image, this means it’s Alpine Linux version 3.16 with nodeJS preinstalled.WORKDIR is basically the same as the cd command in Linux. All subsequent commands will be run from this directory.COPY copies files in your local directory into the container. In this case everything from the local directory gets copied into the working directory /app. If you want to exclude specific files like the Dockerfile you can add a file .dockerignore where you list all the files that are in your directory but are to be ignored in the build process.RUN can be used to run any bash command needed to setup everything for the application to run inside the container. Usually the commands are chained together with &amp;&amp; \\so every command can be written in a separate line. While it is possible to use RUN multiple times keep in mind that every RUN uses a separate shell session meaning things like cd not get saved across sessions so it’s not recommended unless it’s necessary for some reason.EXPOSE exposes ports that will need to be accessible from outside the container later. For example in this case the port 3000 inside the container can then be mapped to port 3000 or any other port outside the container.VOLUME is used to map a folder from inside the container to a folder on the machine where the container is running. This can be used for files you may need to change later like in this case the files that will be displayed by this nodeJS app, or for files that need to be consistent because every file inside a container gets reset to it’s original state every time the container restarts.CMD is the final command that starts the application inside the container without opening a extra shell session.Environment VariablesNow that we are done with the basics let’s move on to environment variables. First off what exactly are environment variables? Environment variables are key-value pairs that can affect the behaviour of running processes on a computer. They’re particularly useful in development and operations workflows for configuring and parameterising applications.A common use case for environment variables is parsing on values to an application that you want to be able to change easily or values that you may want to keep secret (e.g. API keys).You can set a Variable inside the Dockerfile if it’s something you don’t need to change anymore like the port our nodeJS application is supposed to use.ENV PORT=3000 defines the variable PORT and initialises it with 3000The application can then access this variable like thisconst port = process.env.PORT;Another way to set Environment variables, if you don’t want the values to be permanently written somewhere, is in the docker run command, but more on that laterChoosing a Base Image Size Matters:For a lightweight container, minimalistic base images like alpine or busybox are preferred. They are stripped down to the essentials, providing a smaller attack surface and faster deployment times.FROM alpine:latest Compatibility and Libraries:If your application requires specific libraries or compatibility with certain software, consider using a more complete base image such as ubuntu, debian, or fedora. These distributions offer a wider array of pre-built packages and are generally easier to work with for complex applications.FROM ubuntu:20.04 Long-Term Support:Choose distributions that offer long-term support (LTS) for production environments. LTS distributions like ubuntu:20.04 LTS or debian:buster-slim provide ongoing updates and security patches, ensuring stability and reducing maintenance efforts.FROM ubuntu:20.04 Security:Opt for base images with a strong reputation for security and stability, such as debian or centos. These distributions are known for regularly scanning their images for vulnerabilities and applying security patches.FROM debian:buster-slim Architecture Support:Consider the CPU architecture for which you are building your image. Some base images like arm32v7/debian or amd64/alpine are optimised for specific architectures, ensuring better performance and compatibility on the target hardware and if you want your image to run on multiple architectures the base image needs to be compatible as well.Building a ContainerAfter creating a application and a Dockerfile simply run docker build -t your-image-name:tag .. You can see all your local images by running docker images. (Often a version identifier or latest is used as tag)Pushing Builds to a RegistryIf you haven’t already, log in to your Docker registry (e.g. Docker Hub) and create a new repository for your image. Before you can push an image, it needs to be tagged with the registry name. Use the docker tag command like this:docker tag your-image-name:tag registry-username/repository-name:tagIf you’re not logged in to the Docker registry from your command line, you’ll need to do so. Just type docker login in your terminal (For a private registry use docker login [registry-url]).Now to push your image by running:docker push registry-username/repository-name:tagMulti Architecture BuildsFirst off we need to create a new builder that supports non native architectures.docker buildx create --name mybuilder --usedocker run -it --rm --privileged tonistiigi/binfmt --install allNow we can build and push an image that supports multiple architectures in one go.(If you don’t run this from the directory where your Dockerfile is you need to replace the dot with the correct path). If you want to use different Dockerfiles for different architectures you can specify which file is used for what architecture by adding a extension like .arm64docker buildx build --platform linux/amd64,linux/arm64 -t registry-username/repository-name:tag . --pushRunning a ContainerIf the image has been built successfully the container can be run by using:`docker run -d your-image-name:tag`If you want to pull a container and run it use:docker run -d registry-username/repository-name:tag(-d runs the container in detached mode, essentially running it in the background so you can keep using your terminal session).To see which containers are running, use docker ps.You can start and stop containers using docker start name_or_id or docker stop name_or_id.run options --name=custom_name Assign a custom name to your container --rm Automatically remove the container when it exits -p host_port:container_port Map a port from inside the container to a port on your host machine -v /host/path:/container/path Mount a volume to save persistent files -e \"ENV_VAR_NAME=value\" Setting a environment variable -it Run container in interactive mode with a TTY (simulated terminal)You can set different restart policies, too. --restart=no (Default): Do not automatically restart the container --restart=always Always restart the container if it stops --restart=unless-stopped Restart the container unless it has been stopped manually --restart=on-failure:6 Restart the container if it exits due to an error (non-zero exit status). You can also specify a maximum number of restarts.Nvidia GPU PassthroughIf you need to use a gpu inside a container e.g. for video transcoding or machine learning then your container needs to have the necessary drivers installed. The easiest way to achieve this is to just use a prebuilt cuda base image.FROM nvidia/cuda:12.1.0-base-ubuntu22.04If you decide to use a ubuntu base image you may have to use this after the FROM command:RUN apt-get update &amp;&amp; \\ DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y tzdataOtherwise the container expects user input during the build that you obviously cant provide.If you want to make your image as small as possible you can use rm -rf /var/lib/apt/lists/* at the end of your RUN instruction to remove the no longer needed apt files.To make GPUs accessible inside the container use --gpu all in the docker run command. If you want to use one or more specific GPUs add --gpus all -e NVIDIA_VISIBLE_DEVICES=GPU-UUID-HERE. To list all available GPUs and the UUIDs run nvidia-smi -L. The nvidia-smi command can also be used to verify what GPUs are visible inside the container like this:docker exec -it container_name_or_id nvidia-smiCommand OverviewStart a container:docker start helloworldStop a container:docker stop helloworldShow all running containers:docker psShow all containers:docker ps -aShow all images:docker imagesShow all volumes:docker volume lsShow all networks:docker network lsssh into a containerdocker exec -it helloworld /bin/bash #helloworld is the name of the containeror docker exec --tty helloworld /bin/bash #helloworld is the name of the containersend a command to a containerdocker exec helloworld ls" }, { "title": "Useful CSS Libraries", "url": "/posts/css_libraries/", "categories": "CSS, webdev, libraries, frameworks", "tags": "CSS, webdev, libraries, frameworks", "date": "2022-09-18 00:00:00 +0200", "snippet": "BootstrapBootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development. It contains CSS- and JavaScript-based design templates for typography, forms, buttons, navigation, and other interface components.pros easy to use responsive lots of components lots of documentationcons not very customizable not very lightweight html gets bloated with classes all bootstrap sites look essentialy the samestart template&lt;!doctype html&gt;&lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt; &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT\" crossorigin=\"anonymous\"&gt; &lt;script defer src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; &lt;title&gt;Hello, world!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt;websiteWater CSSWater.css is a tiny, responsive, modern CSS framework. It makes your websites look beautiful at any size, be it a 17” laptop screen or an iPhone 5.pros very lightweight responsive easy to use customizable with css variablescons only CSS (no JS) “only” responsiveness no componentsstart template&lt;!doctype html&gt;&lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt; &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/water.css@2/out/dark.css\"&gt; &lt;title&gt;Hello, world!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt;websitemyLibrarymyLibrary is my own CSS / JS framework. It is very lightweight and responsive. It is still in development.My goal is to manage as much as possible with CSS variables and tag selectors to keep the html as clean as possible.pros very lightweight responsive easy to use customizable with css variablescons still in developmentstart template&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt; &lt;meta name=\"color-scheme\" content=\"dark light\"&gt; &lt;link rel=\"stylesheet\" href=\"https://saracenrhue.github.io/myLibrary/src/style.css\"/&gt; &lt;script defer src=\"https://saracenrhue.github.io/myLibrary/src/script.js\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"src/style.css\"&gt; &lt;script defer src=\"src/script.js\"&gt;&lt;/script&gt; &lt;title&gt;Hello World!&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;Hello World!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;website" }, { "title": "C++", "url": "/posts/cpp/", "categories": "C++, documentation", "tags": "C++, documentation", "date": "2022-09-18 00:00:00 +0200", "snippet": "#include &lt;iostream&gt;int main(){ std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl; return 0;}NamespacesTo avoid using std:: all the time you can specify the namespace at the top of the file: #include &lt;iostream&gt; using namespace std;Using the namespace declaration is not recommended because it imports everything.Instead, you can import only the needed parts of the namespace: #include &lt;iostream&gt; using std::cout; using std::cin; using std::endl; using std::string;SystemWith system() you can execute a command in the shell:using std::system;system(\"bash script.sh\");Every time you call this function a new shell is created so you have to combine commands with &amp;&amp;Data Typesstring name = \"Saracen\"; //stringchar gender = 'm'; //charint age = 20; //intbool older18 = true; //boolfloat averageGrade = 4.0f; //floatdouble balance = 3535664675.757; //doubleint arrname[10] = {0,1,2,3,4,5,6,7,8,9}; //arrayOperatorsArithmetic Operator Name Example + Addition x + y - Subtraction x - y * Multiplication x * y / Division x / y % Modulus x % y ++ Increment i++ – Decrement i-- Assignment Operator Example Same As = x = 5 x + y += x += 5 x = x + 5 -= x -= 5 x = x - 5 *= x *= 5 x = x * 5 /= x /= 5 x = x / 5 %= x %= 5 x = x % 5 Comparison Operator Name Example == equal to x == y != not equal to x != y &gt; greater than x &gt; y &lt; less than x &lt; y &gt;= greater than or equal to x &gt;= y &lt;= less than or equal to x &lt;= y Logical Operator Name Description Example &amp;&amp; AND returns true if both statements are true x &lt; 5 &amp;&amp; x &lt; 10 || OR returns true if one of the statements is true x &lt; 5 || x &lt; 4 ! NOT reverse the result, returns false if the result is true !(x &lt; 5 &amp;&amp; x &lt; 10) Bitwise Operator Name Description Example &amp; AND Sets each bit to 1 if both bits are 1 5 &amp; 1 | OR Sets each bit to 1 if one of two bits is 1 5 \\| 1 ^ XOR Sets each bit to 1 if only one of two bits is 1 5 ^ 1 ~ NOT Inverts all the bits ~5 « Zero fill left shift Shift left by pushing zeros in from the right and let the leftmost bits fall off 5 &lt;&lt; 1 » Signed right shift Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off 5 &gt;&gt; 1 In and Output// print to consolecout &lt;&lt; \"Hello, World!\" &lt;&lt; endl;//same ascout &lt;&lt; \"Hello, World!\\n\";//print variablecout &lt;&lt; \"my name is \" &lt;&lt; username &lt;&lt; endl;// get user inputstring name;int age; cin &gt;&gt; name;// get multiple input values// first input space second inputcin &gt;&gt; name &gt;&gt; age;Castingchange the data type of a variablex = 3.14; //doubley = (int)x; //intArraysint array[] = {1, 2, 3, 4, 5, 6}; //you can also use int array[6] to specify the sizeint arraySize = sizeof(array) / sizeof(array[0]); //get size of arrayfor (auto item : items) { // iterate array or list cout &lt;&lt; item &lt;&lt; endl;}Flow Controlif else statementint n;cout &lt;&lt; \"enter number \";cin &gt;&gt; n;if (n%2 == 0) { cout &lt;&lt; \"the mumber is even\" &lt;&lt; endl;} else { cout &lt;&lt; \"the mumber is odd\" &lt;&lt; endl;}switch statementint day = 4;switch (day) { case 6: cout &lt;&lt; \"Today is Saturday\"; break; case 7: cout &lt;&lt; \"Today is Sunday\"; break; default: cout &lt;&lt; \"Looking forward to the Weekend\";}if there is no “break” the next case will be executed toofor loopfor (int i = 0; i &lt; 5; i++) { cout &lt;&lt; i ;}auto for loopfor (auto item : items) { // iterate array or list cout &lt;&lt; item &lt;&lt; endl;}You can specify the type instead of auto.You can also use auto to initialise a variable.while loopint i = 0;while (i &lt; 5) { cout &lt;&lt; i; i++;}do while loopint i = 0;do { cout &lt;&lt; i; i++;} while (i &lt; 5);gets executed at least oncebreak statementfor (int i = 0; i &lt; 10; i++) { if (i == 4) { break; } cout &lt;&lt; i;}break statement breaks the loopcontinue statementfor (int i = 0; i &lt; 10; i++) { if (i == 4) { continue; } cout &lt;&lt; i;}continue statement skips the current iterationfunctionsint myFunction(int x, int y);int main () { //code}int myFunction(int x, int y) { return x + y;}You can also define the function before the main functionand implement it after the main function. This way you havean overview of all functions in the beginning of the code.default parametersint myFunction(int x, int y = 5) { return x + y; }You can set a default value for a parameter so you don’t have to pass it every time you can overwrite the default value by passing a valueExceptions try { int age = 21; if (age &gt;= 16) { cout &lt;&lt; \"Access granted - you are old enough.\"; } else { throw(age); }}catch (int age) { cout &lt;&lt; \"Access denied - You must be at least 18 years old.\\n\"; cout &lt;&lt; \"Age is: \" &lt;&lt; age;}Structs// Create structure variables and assign values (optional)struct{ int number; string text;} myStruct = {0,\"hello\"}, myStruct2 = {1,\"world\"}; You van initialize struct variables with default values, too. {: .prompt-info }Access struct variables with .myStruct.number = 1;myStruct.text = \"hello\";cout &lt;&lt; myStruct.number &lt;&lt; \" \" &lt;&lt; myStruct.text &lt;&lt; endl;You can also give the struct a name and use it like a data typestruct Book{ string title; int year; int pages; bool isHardcover;};int main(){ Book Skulduggery1 = {\"Skulduggery Pleasant\", 2007, 400, true}; cout &lt;&lt; Skulduggery1.title &lt;&lt; endl; return 0;}TemplatesTemplates can stand for any datatype to awoid function overloadingtemplate &lt;typename T&gt; void swapValue(T &amp;a, T &amp;b){ T temp = a; a = b; b = temp;}OOPClasseseverything protected can only be accessed inside the class and subclasses everything private can only be accessed inside the class you can use getter and setter to access private and protected variables outside the class everything public can be accessed everywhere this-&gt;name is the same as this.name in Java or self.name in Python#include &lt;list&gt;class YouTubeChannel{protected: string name; string ownerName; int subscribersCount; list &lt;string&gt; publishedVideoTitles;public: YouTubeChannel(string name, string ownerName){ this-&gt;name = name; this-&gt;ownerName = ownerName; this-&gt;subscribersCount = 0; } string getName(){ return this-&gt;name; } string setName(string name){ this-&gt;name = name; }};int main() { // create object of class YouTubeChannel YouTubeChannel ytChannel(\"Saracen\", \"Saracen\"); ytChannel.setName(\"Saracen\"); cout &lt;&lt; ytChannel.getName();}Enheritance// CookinChannel inherits from YouTubeChannel (superclass)class CookingChannel : public YouTubeChannel{public: // use constructor of YouTubeChannel (super constructor) CookingChannel(string name, string ownerName):YouTubeChannel(name, ownerName){} void practice(){ cout &lt;&lt; OwnerName &lt;&lt; \" is practicing how to cook\" &lt;&lt; endl; }};" }, { "title": "Bash", "url": "/posts/bash/", "categories": "Bash, Terminal, Shell", "tags": "Servers, Bash, Terminal, Linux, Documentation, Automation, Shell", "date": "2022-09-18 00:00:00 +0200", "snippet": "Bash (Bourne Again SHell) is a widely used command language interpreter for the GNU operating system. It offers scripting capabilities, allowing for task automation, program execution, and more. Bash is a powerful tool for managing servers, automating tasks, and developing in a Linux environment.Basic Bash CommandsRunning ScriptsExecute a script:bash script.shMake a script executable and run it:chmod +x ./script.sh./script.shFile System OperationsChange directory:cd /path/to/directoryReturn to the home directory:cdMove back one directory:cd ..Copy files:cp /path/to/file /path/to/destinationMove files:mv /path/to/file /path/to/destinationList files in the current directory:lsList all files, including hidden ones:ls -aList files in a specific directory:ls /path/to/directoryCreate a new file:touch file.txtCreate a new directory:mkdir directoryDelete files:rm file.txtDelete a directory and its contents:rm -r directoryWriting to FilesAppend text to a file:echo \"Hello, World!\" &gt;&gt; file.txtOverwrite text in a file:echo \"Hello, World!\" &gt; file.txtBash VariablesDefining variables:name=\"John\"age=30is_admin=trueAccessing variables:echo $nameString ManipulationConvert to uppercase:msg=\"hello\"echo ${msg^^}Convert to lowercase:msg=\"HELLO\"echo ${msg,,}Replace text in a string:msg=\"hello world\"echo ${msg/world/universe}ArraysDefining an array:my_array=(apple banana cherry)Accessing array elements:echo ${my_array[0]} # Outputs 'apple'Adding elements to an array:my_array+=(date)Associative Arrays (Dictionaries)Defining an associative array:declare -A useruser[name]=\"John\"user[age]=30Accessing associative array elements:echo ${user[name]}Passing Arguments to Scripts./script.sh arg1 arg2 arg3Inside script.sh:echo $1 # First argumentecho $2 # Second argumentSystem VariablesCommonly used system variables:echo $USER # Current usernameecho $BASH_VERSION # Bash versionecho $PWD # Current directoryecho $HOME # Home directoryInput and OutputReading user input:echo \"Enter your name:\"read nameecho \"Hello, $name\"Silent input (e.g., for passwords):read -s passwordFlow ControlIf Statementif [ condition ]; then # commandselif [ other_condition ]; then # other commandselse # else commandsfiLoopsWhile Loopwhile [ condition ]; do # commandsdoneFor LoopLoop over a range of numbers:for i in {1..10}; do echo $idoneLoop over a list:for i in apple banana cherry; do echo $idoneFunctionsDefining a function:function greet { echo \"Hello, $1\"}Calling a function with arguments:greet JohnAdvanced ConceptsProcess ControlBackground a process:long_running_command &amp;Kill a process:kill [process_id]Text ProcessingUsing grep to search inside files:grep \"pattern\" file.txtUsing awk for pattern scanning and processing:awk '/pattern/ { print $0 }' file.txtUsing sed for stream editing:sed 's/old/new/g' file.txtNetworkingDownload files with wget:wget [url]Transfer files with scp:scp file.txt user@remote:/path" } ]
